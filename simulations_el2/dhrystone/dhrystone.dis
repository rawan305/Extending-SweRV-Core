
dhrystone.exe:     file format elf32-littleriscv


Disassembly of section .text:

00000000 <_start>:
       0:	5f5552b7          	lui	t0,0x5f555
       4:	55528293          	addi	t0,t0,1365 # 5f555555 <STACK+0x5f53ceb5>
       8:	7c029073          	csrw	0x7c0,t0
       c:	00018117          	auipc	sp,0x18
      10:	69410113          	addi	sp,sp,1684 # 186a0 <STACK>
      14:	45f000ef          	jal	ra,c72 <main>

00000018 <_finish>:
      18:	d05802b7          	lui	t0,0xd0580
      1c:	0ff00313          	li	t1,255
      20:	00628023          	sb	t1,0(t0) # d0580000 <STACK+0xd0567960>
      24:	fe000ae3          	beqz	zero,18 <_finish>
      28:	0001                	nop
      2a:	0001                	nop
      2c:	0001                	nop
      2e:	0001                	nop
      30:	0001                	nop
      32:	0001                	nop
      34:	0001                	nop
      36:	0001                	nop
      38:	0001                	nop
      3a:	0001                	nop

0000003c <start_time>:
        Implementation may be capturing a system timer (as implemented in the example code)
        or zeroing some system parameters - e.g. setting the cpu clocks cycles to 0.
*/
void start_time(void) {
uint32_t mcyclel;
        asm volatile ("csrr %0,mcycle"  : "=r" (mcyclel) );
      3c:	b0002773          	csrr	a4,mcycle
        start_time_val = mcyclel;
      40:	67cd                	lui	a5,0x13
      42:	eae7a023          	sw	a4,-352(a5) # 12ea0 <start_time_val>
}
      46:	8082                	ret

00000048 <stop_time>:
        Implementation may be capturing a system timer (as implemented in the example code)
        or other system parameters - e.g. reading the current value of cpu cycles counter.
*/
void stop_time(void) {
uint32_t mcyclel;
        asm volatile ("csrr %0,mcycle"  : "=r" (mcyclel) );
      48:	b0002773          	csrr	a4,mcycle
        stop_time_val = mcyclel;
      4c:	67cd                	lui	a5,0x13
      4e:	e8e7ae23          	sw	a4,-356(a5) # 12e9c <stop_time_val>
}
      52:	8082                	ret

00000054 <get_time>:
        This methodology is taken to accomodate any hardware or simulated platform.
        The sample implementation returns millisecs by default,
        and the resolution is controlled by <TIMER_RES_DIVIDER>
*/
CORE_TICKS get_time(void) {
        CORE_TICKS elapsed=(CORE_TICKS)(MYTIMEDIFF(stop_time_val, start_time_val));
      54:	67cd                	lui	a5,0x13
      56:	62cd                	lui	t0,0x13
      58:	e9c7a503          	lw	a0,-356(a5) # 12e9c <stop_time_val>
      5c:	ea02a303          	lw	t1,-352(t0) # 12ea0 <start_time_val>
        return elapsed;
}
      60:	40650533          	sub	a0,a0,t1

00000064 <.LVL3>:
      64:	8082                	ret

00000066 <time_in_secs>:

        The <secs_ret> type is used to accomodate systems with no support for floating point.
        Default implementation implemented by the EE_TICKS_PER_SEC macro above.
*/
secs_ret time_in_secs(CORE_TICKS ticks) {
        secs_ret retval=((secs_ret)ticks) / (secs_ret)EE_TICKS_PER_SEC;
      66:	3e800793          	li	a5,1000
        return retval;
}
      6a:	02f55533          	divu	a0,a0,a5

0000006e <.LVL5>:
      6e:	8082                	ret

00000070 <time_in_msecs>:

secs_ret time_in_msecs(CORE_TICKS ticks) {
        secs_ret retval=((secs_ret)ticks) / (secs_ret)(EE_TICKS_PER_SEC / 1000);
        return retval;
}
      70:	8082                	ret

00000072 <Ireport>:
#define DLX_FREQ 200  /* in MHz */
#define PROC_6 0

void Ireport ( int c ) {
  // report(c);
}
      72:	8082                	ret

00000074 <strcpy>:
#ifndef strcpy
char *strcpy (char *dst0, const char *src0)
{
  char *s = dst0;

  while ((*dst0++ = *src0++));
      74:	87aa                	mv	a5,a0

00000076 <.L9>:
      76:	0005c703          	lbu	a4,0(a1)
      7a:	00e78023          	sb	a4,0(a5)
      7e:	cf21                	beqz	a4,d6 <.L25>
      80:	0015c283          	lbu	t0,1(a1)
      84:	005780a3          	sb	t0,1(a5)
      88:	04028763          	beqz	t0,d6 <.L25>
      8c:	0025c303          	lbu	t1,2(a1)
      90:	00678123          	sb	t1,2(a5)
      94:	04030163          	beqz	t1,d6 <.L25>
      98:	0035c383          	lbu	t2,3(a1)
      9c:	007781a3          	sb	t2,3(a5)
      a0:	02038b63          	beqz	t2,d6 <.L25>
      a4:	0045c603          	lbu	a2,4(a1)
      a8:	00c78223          	sb	a2,4(a5)
      ac:	c60d                	beqz	a2,d6 <.L25>
      ae:	0055c683          	lbu	a3,5(a1)
      b2:	00d782a3          	sb	a3,5(a5)
      b6:	c285                	beqz	a3,d6 <.L25>
      b8:	0065c803          	lbu	a6,6(a1)
      bc:	05a1                	addi	a1,a1,8
      be:	07a1                	addi	a5,a5,8
      c0:	ff078f23          	sb	a6,-2(a5)
      c4:	00080963          	beqz	a6,d6 <.L25>
      c8:	fff5c883          	lbu	a7,-1(a1)
      cc:	ff178fa3          	sb	a7,-1(a5)
      d0:	fa0893e3          	bnez	a7,76 <.L9>
      d4:	8082                	ret

000000d6 <.L25>:

  return s;
}
      d6:	8082                	ret

000000d8 <strcmp>:
#endif

#ifndef strcmp
int strcmp (const char *s1, const char *s2)
{
  while (*s1 && *s2 && *s1 == *s2) {
      d8:	00054703          	lbu	a4,0(a0)
      dc:	0005c783          	lbu	a5,0(a1)
      e0:	eb09                	bnez	a4,f2 <.L27>
      e2:	a829                	j	fc <.L28>

000000e4 <.L33>:
      e4:	00e79c63          	bne	a5,a4,fc <.L28>
      e8:	00054703          	lbu	a4,0(a0)
    s1++;
    s2++;
  }
  return (*(unsigned char *) s1) - (*(unsigned char *) s2);
      ec:	0005c783          	lbu	a5,0(a1)
  while (*s1 && *s2 && *s1 == *s2) {
      f0:	cb09                	beqz	a4,102 <.L31>

000000f2 <.L27>:
      f2:	0005c783          	lbu	a5,0(a1)
    s1++;
      f6:	0505                	addi	a0,a0,1

000000f8 <.LVL11>:
    s2++;
      f8:	0585                	addi	a1,a1,1

000000fa <.LVL12>:
  while (*s1 && *s2 && *s1 == *s2) {
      fa:	f7ed                	bnez	a5,e4 <.L33>

000000fc <.L28>:
}
      fc:	40f70533          	sub	a0,a4,a5

00000100 <.LVL13>:
     100:	8082                	ret

00000102 <.L31>:
     102:	4701                	li	a4,0
     104:	40f70533          	sub	a0,a4,a5

00000108 <.LVL15>:
     108:	8082                	ret

0000010a <Proc_1>:
	/* Local variable, initialized with Ptr_Val_Par->Ptr_Comp,    */
	/* corresponds to "rename" in Ada, "with" in Pascal           */

	Ireport(0x20010);

	structassign(*Ptr_Val_Par->Ptr_Comp, *Ptr_Glob);
     10a:	664d                	lui	a2,0x13
     10c:	e9862703          	lw	a4,-360(a2) # 12e98 <Ptr_Glob>
	REG Rec_Pointer Next_Record = Ptr_Val_Par->Ptr_Comp;
     110:	411c                	lw	a5,0(a0)

00000112 <.LVL17>:
	structassign(*Ptr_Val_Par->Ptr_Comp, *Ptr_Glob);
     112:	430c                	lw	a1,0(a4)
     114:	00472383          	lw	t2,4(a4)
     118:	00872283          	lw	t0,8(a4)
     11c:	01072f83          	lw	t6,16(a4)
     120:	01472f03          	lw	t5,20(a4)
     124:	01872e83          	lw	t4,24(a4)
     128:	01c72e03          	lw	t3,28(a4)
     12c:	02072303          	lw	t1,32(a4)
     130:	02472883          	lw	a7,36(a4)
     134:	02872803          	lw	a6,40(a4)
     138:	5754                	lw	a3,44(a4)
     13a:	c38c                	sw	a1,0(a5)
	Ptr_Val_Par->variant.var_1.Int_Comp = 5;
	Next_Record->variant.var_1.Int_Comp
	= Ptr_Val_Par->variant.var_1.Int_Comp;
	Next_Record->Ptr_Comp = Ptr_Val_Par->Ptr_Comp;
     13c:	410c                	lw	a1,0(a0)
	structassign(*Ptr_Val_Par->Ptr_Comp, *Ptr_Glob);
     13e:	0077a223          	sw	t2,4(a5)
     142:	0057a423          	sw	t0,8(a5)
     146:	01f7a823          	sw	t6,16(a5)
     14a:	01e7aa23          	sw	t5,20(a5)
     14e:	01d7ac23          	sw	t4,24(a5)
     152:	01c7ae23          	sw	t3,28(a5)
     156:	0267a023          	sw	t1,32(a5)
     15a:	0317a223          	sw	a7,36(a5)
     15e:	0307a423          	sw	a6,40(a5)
     162:	d7d4                	sw	a3,44(a5)
	Ptr_Val_Par->variant.var_1.Int_Comp = 5;
     164:	4395                	li	t2,5
     166:	00752623          	sw	t2,12(a0)
	Next_Record->Ptr_Comp = Ptr_Val_Par->Ptr_Comp;
     16a:	c38c                	sw	a1,0(a5)

0000016c <.LBB139>:
{
	Ireport(0x20030);

	if (Ptr_Glob != Null)
	/* then, executed */
	*Ptr_Ref_Par = Ptr_Glob->Ptr_Comp;
     16c:	00072283          	lw	t0,0(a4)
	Proc_7(10, Int_Glob, &Ptr_Glob->variant.var_1.Int_Comp);
     170:	674d                	lui	a4,0x13

00000172 <.LBB141>:
    One_Fifty       Int_Loc;

	Ireport(0x20070);

    Int_Loc = Int_1_Par_Val + 2;
    *Int_Par_Ref = Int_2_Par_Val + Int_Loc;
     172:	e9072f83          	lw	t6,-368(a4) # 12e90 <Int_Glob>

00000176 <.LBE141>:
	*Ptr_Ref_Par = Ptr_Glob->Ptr_Comp;
     176:	0057a023          	sw	t0,0(a5)
	Proc_7(10, Int_Glob, &Ptr_Glob->variant.var_1.Int_Comp);
     17a:	e9862603          	lw	a2,-360(a2)

0000017e <.LBE139>:
	= Ptr_Val_Par->variant.var_1.Int_Comp;
     17e:	0077a623          	sw	t2,12(a5)

00000182 <.LBB145>:
    *Int_Par_Ref = Int_2_Par_Val + Int_Loc;
     182:	00cf8f13          	addi	t5,t6,12
     186:	01e62623          	sw	t5,12(a2)

0000018a <.LBE146>:
	if (Next_Record->Discr == Ident_1)
     18a:	0047ae83          	lw	t4,4(a5)
     18e:	000e9863          	bnez	t4,19e <.L35>
	Next_Record->Ptr_Comp = Ptr_Glob->Ptr_Comp;
     192:	4208                	lw	a0,0(a2)

00000194 <.LBB153>:
    *Int_Par_Ref = Int_2_Par_Val + Int_Loc;
     194:	4ec9                	li	t4,18
     196:	01d7a623          	sw	t4,12(a5)

0000019a <.LBE153>:
	Next_Record->Ptr_Comp = Ptr_Glob->Ptr_Comp;
     19a:	c388                	sw	a0,0(a5)

0000019c <.LBB157>:
}				/* Proc_7 */
     19c:	8082                	ret

0000019e <.L35>:
	structassign(*Ptr_Val_Par, *Ptr_Val_Par->Ptr_Comp);
     19e:	411c                	lw	a5,0(a0)

000001a0 <.LVL24>:
     1a0:	0007a383          	lw	t2,0(a5)
     1a4:	0047a283          	lw	t0,4(a5)
     1a8:	0087af83          	lw	t6,8(a5)
     1ac:	00c7ae03          	lw	t3,12(a5)
     1b0:	0107a303          	lw	t1,16(a5)
     1b4:	0147a883          	lw	a7,20(a5)
     1b8:	0187a803          	lw	a6,24(a5)
     1bc:	4fcc                	lw	a1,28(a5)
     1be:	5390                	lw	a2,32(a5)
     1c0:	53d4                	lw	a3,36(a5)
     1c2:	5798                	lw	a4,40(a5)
     1c4:	02c7af03          	lw	t5,44(a5)
     1c8:	00752023          	sw	t2,0(a0)
     1cc:	00552223          	sw	t0,4(a0)
     1d0:	01f52423          	sw	t6,8(a0)
     1d4:	01c52623          	sw	t3,12(a0)
     1d8:	00652823          	sw	t1,16(a0)
     1dc:	01152a23          	sw	a7,20(a0)
     1e0:	01052c23          	sw	a6,24(a0)
     1e4:	cd4c                	sw	a1,28(a0)
     1e6:	d110                	sw	a2,32(a0)
     1e8:	d154                	sw	a3,36(a0)
     1ea:	d518                	sw	a4,40(a0)
     1ec:	03e52623          	sw	t5,44(a0)

000001f0 <.LBE159>:
}               /* Proc_1 */
     1f0:	8082                	ret

000001f2 <Proc_2>:
	if (Ch_1_Glob == 'A')
     1f2:	67cd                	lui	a5,0x13
     1f4:	e897c703          	lbu	a4,-375(a5) # 12e89 <Ch_1_Glob>
     1f8:	04100293          	li	t0,65

000001fc <.LVL27>:
     1fc:	00570363          	beq	a4,t0,202 <.L39>
}               /* Proc_2 */
     200:	8082                	ret

00000202 <.L39>:
		Int_Loc -= 1;
     202:	00052303          	lw	t1,0(a0)
		*Int_Par_Ref = Int_Loc - Int_Glob;
     206:	63cd                	lui	t2,0x13
     208:	e903a583          	lw	a1,-368(t2) # 12e90 <Int_Glob>
		Int_Loc -= 1;
     20c:	00930613          	addi	a2,t1,9

00000210 <.LVL29>:
		*Int_Par_Ref = Int_Loc - Int_Glob;
     210:	40b606b3          	sub	a3,a2,a1
     214:	c114                	sw	a3,0(a0)

00000216 <.LVL30>:
}               /* Proc_2 */
     216:	8082                	ret

00000218 <Proc_3>:
	if (Ptr_Glob != Null)
     218:	674d                	lui	a4,0x13
     21a:	e9872283          	lw	t0,-360(a4) # 12e98 <Ptr_Glob>
     21e:	00028763          	beqz	t0,22c <.L41>
	*Ptr_Ref_Par = Ptr_Glob->Ptr_Comp;
     222:	0002a783          	lw	a5,0(t0)
     226:	c11c                	sw	a5,0(a0)
	Proc_7(10, Int_Glob, &Ptr_Glob->variant.var_1.Int_Comp);
     228:	e9872283          	lw	t0,-360(a4)

0000022c <.L41>:
     22c:	634d                	lui	t1,0x13

0000022e <.LBB166>:
    *Int_Par_Ref = Int_2_Par_Val + Int_Loc;
     22e:	e9032383          	lw	t2,-368(t1) # 12e90 <Int_Glob>
     232:	00c38513          	addi	a0,t2,12

00000236 <.LVL33>:
     236:	00a2a623          	sw	a0,12(t0)

0000023a <.LBE166>:
}               /* Proc_3 */
     23a:	8082                	ret

0000023c <Proc_4>:
	Bool_Loc = Ch_1_Glob == 'A';
     23c:	67cd                	lui	a5,0x13
     23e:	e897c283          	lbu	t0,-375(a5) # 12e89 <Ch_1_Glob>
	Bool_Glob = Bool_Loc | Bool_Glob;
     242:	674d                	lui	a4,0x13
     244:	e8c72683          	lw	a3,-372(a4) # 12e8c <Bool_Glob>
	Bool_Loc = Ch_1_Glob == 'A';
     248:	fbf28313          	addi	t1,t0,-65
     24c:	00133393          	seqz	t2,t1
	Bool_Glob = Bool_Loc | Bool_Glob;
     250:	00d3e533          	or	a0,t2,a3
	Ch_2_Glob = 'B';
     254:	65cd                	lui	a1,0x13
     256:	04200613          	li	a2,66
	Bool_Glob = Bool_Loc | Bool_Glob;
     25a:	e8a72623          	sw	a0,-372(a4)
	Ch_2_Glob = 'B';
     25e:	e8c58423          	sb	a2,-376(a1) # 12e88 <Ch_2_Glob>
}               /* Proc_4 */
     262:	8082                	ret

00000264 <Proc_5>:
	Ch_1_Glob = 'A';
     264:	67cd                	lui	a5,0x13
     266:	04100713          	li	a4,65
	Bool_Glob = false;
     26a:	62cd                	lui	t0,0x13
	Ch_1_Glob = 'A';
     26c:	e8e784a3          	sb	a4,-375(a5) # 12e89 <Ch_1_Glob>
	Bool_Glob = false;
     270:	e802a623          	sw	zero,-372(t0) # 12e8c <Bool_Glob>
}               /* Proc_5 */
     274:	8082                	ret

00000276 <Proc_6>:
}				/* Proc_6 */
     276:	8082                	ret

00000278 <Proc_7>:
    Int_Loc = Int_1_Par_Val + 2;
     278:	0509                	addi	a0,a0,2

0000027a <.LVL39>:
    *Int_Par_Ref = Int_2_Par_Val + Int_Loc;
     27a:	00b502b3          	add	t0,a0,a1
     27e:	00562023          	sw	t0,0(a2)
}				/* Proc_7 */
     282:	8082                	ret

00000284 <Proc_8>:
      printf("X) Int_2_Par_Val: %x\n", Int_2_Par_Val);
#endif

	Ireport(0x20080);

    Int_Loc = Int_1_Par_Val + 5;
     284:	00560713          	addi	a4,a2,5

00000288 <.LVL41>:
    Arr_1_Par_Ref[Int_Loc] = Int_2_Par_Val;
    Arr_1_Par_Ref[Int_Loc + 1] = Arr_1_Par_Ref[Int_Loc];
    Arr_1_Par_Ref[Int_Loc + 30] = Int_Loc;
    for (Int_Index = Int_Loc; Int_Index <= Int_Loc + 1; ++Int_Index)
	Arr_2_Par_Ref[Int_Loc][Int_Index] = Int_Loc;
     288:	0c800813          	li	a6,200
     28c:	030702b3          	mul	t0,a4,a6
     290:	060a                	slli	a2,a2,0x2

00000292 <.LVL42>:
    Arr_1_Par_Ref[Int_Loc] = Int_2_Par_Val;
     292:	00271793          	slli	a5,a4,0x2
     296:	953e                	add	a0,a0,a5

00000298 <.LVL43>:
     298:	c114                	sw	a3,0(a0)
    Arr_1_Par_Ref[Int_Loc + 30] = Int_Loc;
     29a:	dd38                	sw	a4,120(a0)
    Arr_1_Par_Ref[Int_Loc + 1] = Arr_1_Par_Ref[Int_Loc];
     29c:	c154                	sw	a3,4(a0)

0000029e <.LVL44>:
    Arr_2_Par_Ref[Int_Loc][Int_Loc - 1] += 1;
    Arr_2_Par_Ref[Int_Loc + 20][Int_Loc] = Arr_1_Par_Ref[Int_Loc];
     29e:	6f05                	lui	t5,0x1
    Int_Glob = 5;
     2a0:	684d                	lui	a6,0x13
     2a2:	00c28333          	add	t1,t0,a2
     2a6:	006583b3          	add	t2,a1,t1
    Arr_2_Par_Ref[Int_Loc][Int_Loc - 1] += 1;
     2aa:	0103a683          	lw	a3,16(t2)

000002ae <.LVL45>:
	Arr_2_Par_Ref[Int_Loc][Int_Index] = Int_Loc;
     2ae:	00e3aa23          	sw	a4,20(t2)

000002b2 <.LVL46>:
     2b2:	00e3ac23          	sw	a4,24(t2)

000002b6 <.LVL47>:
    Arr_2_Par_Ref[Int_Loc][Int_Loc - 1] += 1;
     2b6:	00168893          	addi	a7,a3,1
     2ba:	0113a823          	sw	a7,16(t2)
    Arr_2_Par_Ref[Int_Loc + 20][Int_Loc] = Arr_1_Par_Ref[Int_Loc];
     2be:	00052e03          	lw	t3,0(a0)
     2c2:	9596                	add	a1,a1,t0

000002c4 <.LVL48>:
     2c4:	00c58eb3          	add	t4,a1,a2
     2c8:	01df0fb3          	add	t6,t5,t4
    Int_Glob = 5;
     2cc:	4715                	li	a4,5

000002ce <.LVL49>:
    Arr_2_Par_Ref[Int_Loc + 20][Int_Loc] = Arr_1_Par_Ref[Int_Loc];
     2ce:	fbcfaa23          	sw	t3,-76(t6)

000002d2 <.LVL50>:
    Int_Glob = 5;
     2d2:	e8e82823          	sw	a4,-368(a6) # 12e90 <Int_Glob>
#if DBG
      printf("Y) Int_1_Par_Val: %x\n", Int_1_Par_Val);
      printf("Y) Int_2_Par_Val: %x\n", Int_2_Par_Val);
#endif

}				/* Proc_8 */
     2d6:	8082                	ret

000002d8 <Func_1>:

	Ireport(0x30010);

    Ch_1_Loc = Ch_1_Par_Val;
    Ch_2_Loc = Ch_1_Loc;
    if (Ch_2_Loc != Ch_2_Par_Val)
     2d8:	00b50463          	beq	a0,a1,2e0 <.L53>
	/* then, executed */
	return (Ident_1);
     2dc:	4501                	li	a0,0

000002de <.LVL52>:
    else {			/* not executed */
	Ch_1_Glob = Ch_1_Loc;
	return (Ident_2);
    }
}				/* Func_1 */
     2de:	8082                	ret

000002e0 <.L53>:
	Ch_1_Glob = Ch_1_Loc;
     2e0:	67cd                	lui	a5,0x13
     2e2:	e8a784a3          	sb	a0,-375(a5) # 12e89 <Ch_1_Glob>
	return (Ident_2);
     2e6:	4505                	li	a0,1

000002e8 <.LVL54>:
     2e8:	8082                	ret

000002ea <Func_2>:
    Capital_Letter  Ch_Loc = 0;

	Ireport(0x30020);

    Int_Loc = 2;
    while (Int_Loc <= 2)	/* loop body executed once */
     2ea:	00254703          	lbu	a4,2(a0)
     2ee:	0035c783          	lbu	a5,3(a1)
     2f2:	02f70a63          	beq	a4,a5,326 <.L56>

000002f6 <.L60>:
  while (*s1 && *s2 && *s1 == *s2) {
     2f6:	00054283          	lbu	t0,0(a0)
     2fa:	02028463          	beqz	t0,322 <.L62>

000002fe <.LVL57>:
     2fe:	0005c303          	lbu	t1,0(a1)
    s1++;
     302:	0505                	addi	a0,a0,1

00000304 <.LVL58>:
    s2++;
     304:	0585                	addi	a1,a1,1

00000306 <.LVL59>:
  while (*s1 && *s2 && *s1 == *s2) {
     306:	00030463          	beqz	t1,30e <.L59>
     30a:	fe5306e3          	beq	t1,t0,2f6 <.L60>

0000030e <.L59>:
  return (*(unsigned char *) s1) - (*(unsigned char *) s2);
     30e:	406283b3          	sub	t2,t0,t1

00000312 <.LBE171>:
    if (Ch_Loc == 'R')
	/* then, not executed */
	return (true);
    else {			/* executed */
	Ireport(0x30023);
	if (strcmp(Str_1_Par_Ref, Str_2_Par_Ref) > 0)
     312:	00705863          	blez	t2,322 <.L62>

00000316 <.LVL61>:
	    /* then, not executed */
	{
	    Int_Loc += 7;
	    Int_Glob = Int_Loc;
     316:	654d                	lui	a0,0x13
     318:	45a9                	li	a1,10
     31a:	e8b52823          	sw	a1,-368(a0) # 12e90 <Int_Glob>
	    return (true);
     31e:	4505                	li	a0,1
     320:	8082                	ret

00000322 <.L62>:
	} else			/* executed */
	    return (false);
     322:	4501                	li	a0,0
    }				/* if Ch_Loc */
}				/* Func_2 */
     324:	8082                	ret

00000326 <.L56>:
    if (Ch_2_Loc != Ch_2_Par_Val)
     326:	a001                	j	326 <.L56>

00000328 <Func_3>:
{
    Enumeration     Enum_Loc;

    Enum_Loc = Enum_Par_Val;
	Ireport(0x30030);
    if (Enum_Loc == Ident_3)
     328:	1579                	addi	a0,a0,-2

0000032a <.LVL65>:
	/* then, executed */
	return (true);
    else			/* not executed */
	return (false);
}				/* Func_3 */
     32a:	00153513          	seqz	a0,a0

0000032e <.LVL66>:
     32e:	8082                	ret

00000330 <whisperPrintfImpl>:
int
whisperPrintfImpl(const char* format, va_list ap)
{
  int count = 0;  // Printed character count

  for (const char* fp = format; *fp; fp++)
     330:	00054783          	lbu	a5,0(a0)
     334:	0e0789e3          	beqz	a5,c26 <.L103>

00000338 <.LBE215>:
{
     338:	7139                	addi	sp,sp,-64
     33a:	6fc1                	lui	t6,0x10
     33c:	de22                	sw	s0,60(sp)
     33e:	862a                	mv	a2,a0
     340:	dc26                	sw	s1,56(sp)
     342:	da4a                	sw	s2,52(sp)
     344:	d84e                	sw	s3,48(sp)
     346:	d652                	sw	s4,44(sp)
     348:	d456                	sw	s5,40(sp)
  int count = 0;  // Printed character count
     34a:	4501                	li	a0,0

0000034c <.LBB435>:
    {
      if (*fp != '%')
     34c:	02500313          	li	t1,37
        {
          whisperPutc('%');
          continue;
        }

      if (*fp == '-')
     350:	02d00293          	li	t0,45
        {
          fp++;  // Pad right not yet implemented.
        }

      while (*fp == '0')
     354:	03000893          	li	a7,48
        {
          fp++;  // Pad zero not yet implented.
        }

      if (*fp == '*')
     358:	02a00413          	li	s0,42
     35c:	02000393          	li	t2,32
     360:	000f8f93          	mv	t6,t6

00000364 <.LBB216>:
  *(volatile char*)(STDOUT) = c;
     364:	d0580837          	lui	a6,0xd0580
     368:	00b10f13          	addi	t5,sp,11

0000036c <.LBB237>:
          char c = digit < 10 ? '0' + digit : 'a' + digit;
     36c:	4ea5                	li	t4,9

0000036e <.LBB277>:
      char c = '0' + (value % 10);
     36e:	4e29                	li	t3,10
     370:	a811                	j	384 <.L102>

00000372 <.L330>:
          continue;
     372:	8736                	mv	a4,a3

00000374 <.LBB328>:
  *(volatile char*)(STDOUT) = c;
     374:	00f80023          	sb	a5,0(a6) # d0580000 <STACK+0xd0567960>

00000378 <.LBE328>:
          continue;
     378:	86b2                	mv	a3,a2
          ++count;
     37a:	0505                	addi	a0,a0,1
          continue;
     37c:	863a                	mv	a2,a4

0000037e <.L71>:
  for (const char* fp = format; *fp; fp++)
     37e:	0016c783          	lbu	a5,1(a3)
     382:	cfdd                	beqz	a5,440 <.L68>

00000384 <.L102>:
      ++fp;  // Skip %
     384:	00160693          	addi	a3,a2,1
      if (*fp != '%')
     388:	fe6795e3          	bne	a5,t1,372 <.L330>

0000038c <.LVL74>:
      if (*fp == 0)
     38c:	00164783          	lbu	a5,1(a2)
     390:	cbc5                	beqz	a5,440 <.L68>
      if (*fp == '%')
     392:	0a678163          	beq	a5,t1,434 <.L331>
      if (*fp == '-')
     396:	08578a63          	beq	a5,t0,42a <.L332>

0000039a <.L73>:
      while (*fp == '0')
     39a:	07179163          	bne	a5,a7,3fc <.L74>

0000039e <.L75>:
     39e:	0016c783          	lbu	a5,1(a3)
          fp++;  // Pad zero not yet implented.
     3a2:	0685                	addi	a3,a3,1

000003a4 <.LVL76>:
     3a4:	8736                	mv	a4,a3
      while (*fp == '0')
     3a6:	05179b63          	bne	a5,a7,3fc <.L74>

000003aa <.LVL77>:
     3aa:	0016c783          	lbu	a5,1(a3)
          fp++;  // Pad zero not yet implented.
     3ae:	0685                	addi	a3,a3,1

000003b0 <.LVL78>:
      while (*fp == '0')
     3b0:	05179663          	bne	a5,a7,3fc <.L74>

000003b4 <.LVL79>:
     3b4:	00274783          	lbu	a5,2(a4)
          fp++;  // Pad zero not yet implented.
     3b8:	00270693          	addi	a3,a4,2

000003bc <.LVL80>:
      while (*fp == '0')
     3bc:	05179063          	bne	a5,a7,3fc <.L74>

000003c0 <.LVL81>:
     3c0:	00374783          	lbu	a5,3(a4)
          fp++;  // Pad zero not yet implented.
     3c4:	00370693          	addi	a3,a4,3

000003c8 <.LVL82>:
      while (*fp == '0')
     3c8:	03179a63          	bne	a5,a7,3fc <.L74>

000003cc <.LVL83>:
     3cc:	00474783          	lbu	a5,4(a4)
          fp++;  // Pad zero not yet implented.
     3d0:	00470693          	addi	a3,a4,4

000003d4 <.LVL84>:
      while (*fp == '0')
     3d4:	03179463          	bne	a5,a7,3fc <.L74>

000003d8 <.LVL85>:
     3d8:	00574783          	lbu	a5,5(a4)
          fp++;  // Pad zero not yet implented.
     3dc:	00570693          	addi	a3,a4,5

000003e0 <.LVL86>:
      while (*fp == '0')
     3e0:	01179e63          	bne	a5,a7,3fc <.L74>

000003e4 <.LVL87>:
     3e4:	00674783          	lbu	a5,6(a4)
          fp++;  // Pad zero not yet implented.
     3e8:	00670693          	addi	a3,a4,6

000003ec <.LVL88>:
      while (*fp == '0')
     3ec:	01179863          	bne	a5,a7,3fc <.L74>

000003f0 <.LVL89>:
     3f0:	00774783          	lbu	a5,7(a4)
          fp++;  // Pad zero not yet implented.
     3f4:	00770693          	addi	a3,a4,7

000003f8 <.LVL90>:
      while (*fp == '0')
     3f8:	fb1783e3          	beq	a5,a7,39e <.L75>

000003fc <.L74>:
        {
          int width = va_arg(ap, int);
          fp++;  // Width not yet implemented.
     3fc:	00168713          	addi	a4,a3,1

00000400 <.LBE329>:
      if (*fp == '*')
     400:	04879863          	bne	a5,s0,450 <.L333>

00000404 <.LBB330>:
        {
          while (*fp >= '0' && *fp <= '9')
            ++fp;   // Width not yet implemented.
        }

      switch (*fp)
     404:	0016c783          	lbu	a5,1(a3)
  for (const char* fp = format; *fp; fp++)
     408:	00268613          	addi	a2,a3,2

0000040c <.LBB331>:
          int width = va_arg(ap, int);
     40c:	0591                	addi	a1,a1,4

0000040e <.LVL92>:
          fp++;  // Width not yet implemented.
     40e:	86ba                	mv	a3,a4

00000410 <.L78>:
      switch (*fp)
     410:	fa878793          	addi	a5,a5,-88
     414:	0ff7f993          	andi	s3,a5,255
     418:	f733e3e3          	bltu	t2,s3,37e <.L71>
     41c:	00299a13          	slli	s4,s3,0x2
     420:	01fa0ab3          	add	s5,s4,t6
     424:	000aa483          	lw	s1,0(s5)
     428:	8482                	jr	s1

0000042a <.L332>:
      while (*fp == '0')
     42a:	00264783          	lbu	a5,2(a2)
          fp++;  // Pad right not yet implemented.
     42e:	00260693          	addi	a3,a2,2
     432:	b7a5                	j	39a <.L73>

00000434 <.L331>:
  *(volatile char*)(STDOUT) = c;
     434:	00680023          	sb	t1,0(a6)

00000438 <.LBE332>:
  for (const char* fp = format; *fp; fp++)
     438:	0016c783          	lbu	a5,1(a3)
     43c:	0609                	addi	a2,a2,2

0000043e <.LVL98>:
     43e:	f3b9                	bnez	a5,384 <.L102>

00000440 <.L68>:
          break;
        }
    }

  return count;
}
     440:	5472                	lw	s0,60(sp)
     442:	54e2                	lw	s1,56(sp)
     444:	5952                	lw	s2,52(sp)
     446:	59c2                	lw	s3,48(sp)
     448:	5a32                	lw	s4,44(sp)
     44a:	5aa2                	lw	s5,40(sp)
     44c:	6121                	addi	sp,sp,64
     44e:	8082                	ret

00000450 <.L333>:
          while (*fp >= '0' && *fp <= '9')
     450:	fd078613          	addi	a2,a5,-48
     454:	0ff67493          	andi	s1,a2,255
     458:	7c9ee463          	bltu	t4,s1,c20 <.L334>
     45c:	00074783          	lbu	a5,0(a4)
     460:	8636                	mv	a2,a3

00000462 <.LVL100>:
            ++fp;   // Width not yet implemented.
     462:	86ba                	mv	a3,a4

00000464 <.LVL101>:
          while (*fp >= '0' && *fp <= '9')
     464:	fd078913          	addi	s2,a5,-48
     468:	0ff97993          	andi	s3,s2,255
     46c:	0b3eea63          	bltu	t4,s3,520 <.L312>

00000470 <.L335>:
     470:	00174783          	lbu	a5,1(a4)
     474:	863a                	mv	a2,a4

00000476 <.LVL103>:
            ++fp;   // Width not yet implemented.
     476:	00170693          	addi	a3,a4,1

0000047a <.LVL104>:
          while (*fp >= '0' && *fp <= '9')
     47a:	fd078a13          	addi	s4,a5,-48
     47e:	0ffa7a93          	andi	s5,s4,255
     482:	095eef63          	bltu	t4,s5,520 <.L312>

00000486 <.LVL105>:
     486:	00274783          	lbu	a5,2(a4)
     48a:	8636                	mv	a2,a3

0000048c <.LVL106>:
            ++fp;   // Width not yet implemented.
     48c:	00270693          	addi	a3,a4,2

00000490 <.LVL107>:
          while (*fp >= '0' && *fp <= '9')
     490:	fd078493          	addi	s1,a5,-48
     494:	0ff4f913          	andi	s2,s1,255
     498:	092ee463          	bltu	t4,s2,520 <.L312>

0000049c <.LVL108>:
     49c:	00374783          	lbu	a5,3(a4)
     4a0:	8636                	mv	a2,a3

000004a2 <.LVL109>:
            ++fp;   // Width not yet implemented.
     4a2:	00370693          	addi	a3,a4,3

000004a6 <.LVL110>:
          while (*fp >= '0' && *fp <= '9')
     4a6:	fd078993          	addi	s3,a5,-48
     4aa:	0ff9fa13          	andi	s4,s3,255
     4ae:	074ee963          	bltu	t4,s4,520 <.L312>

000004b2 <.LVL111>:
     4b2:	00474783          	lbu	a5,4(a4)
     4b6:	8636                	mv	a2,a3

000004b8 <.LVL112>:
            ++fp;   // Width not yet implemented.
     4b8:	00470693          	addi	a3,a4,4

000004bc <.LVL113>:
          while (*fp >= '0' && *fp <= '9')
     4bc:	fd078a93          	addi	s5,a5,-48
     4c0:	0ffaf493          	andi	s1,s5,255
     4c4:	049eee63          	bltu	t4,s1,520 <.L312>

000004c8 <.LVL114>:
     4c8:	00574783          	lbu	a5,5(a4)
     4cc:	8636                	mv	a2,a3

000004ce <.LVL115>:
            ++fp;   // Width not yet implemented.
     4ce:	00570693          	addi	a3,a4,5

000004d2 <.LVL116>:
          while (*fp >= '0' && *fp <= '9')
     4d2:	fd078913          	addi	s2,a5,-48
     4d6:	0ff97993          	andi	s3,s2,255
     4da:	053ee363          	bltu	t4,s3,520 <.L312>

000004de <.LVL117>:
     4de:	00674783          	lbu	a5,6(a4)
     4e2:	8636                	mv	a2,a3

000004e4 <.LVL118>:
            ++fp;   // Width not yet implemented.
     4e4:	00670693          	addi	a3,a4,6

000004e8 <.LVL119>:
          while (*fp >= '0' && *fp <= '9')
     4e8:	fd078a13          	addi	s4,a5,-48
     4ec:	0ffa7a93          	andi	s5,s4,255
     4f0:	035ee863          	bltu	t4,s5,520 <.L312>

000004f4 <.LVL120>:
     4f4:	00774783          	lbu	a5,7(a4)
     4f8:	8636                	mv	a2,a3

000004fa <.LVL121>:
            ++fp;   // Width not yet implemented.
     4fa:	00770693          	addi	a3,a4,7

000004fe <.LVL122>:
          while (*fp >= '0' && *fp <= '9')
     4fe:	fd078493          	addi	s1,a5,-48
     502:	0ff4f913          	andi	s2,s1,255
     506:	012eed63          	bltu	t4,s2,520 <.L312>
     50a:	00874783          	lbu	a5,8(a4)
     50e:	0721                	addi	a4,a4,8

00000510 <.LVL123>:
            ++fp;   // Width not yet implemented.
     510:	8636                	mv	a2,a3

00000512 <.LVL124>:
          while (*fp >= '0' && *fp <= '9')
     512:	fd078913          	addi	s2,a5,-48
     516:	0ff97993          	andi	s3,s2,255
            ++fp;   // Width not yet implemented.
     51a:	86ba                	mv	a3,a4

0000051c <.LVL125>:
          while (*fp >= '0' && *fp <= '9')
     51c:	f53efae3          	bgeu	t4,s3,470 <.L335>

00000520 <.L312>:
  for (const char* fp = format; *fp; fp++)
     520:	0609                	addi	a2,a2,2
     522:	b5fd                	j	410 <.L78>

00000524 <.L79>:
  unsigned uu = value;
     524:	419c                	lw	a5,0(a1)
  int charCount = 0;
     526:	4981                	li	s3,0

00000528 <.LBE334>:
          count += whisperPrintInt(va_arg(ap, int), 16);
     528:	0591                	addi	a1,a1,4

0000052a <.LBB335>:
  if (base == 8)
     52a:	a011                	j	52e <.L96>

0000052c <.L106>:
          buffer[charCount++] = c;
     52c:	89ba                	mv	s3,a4

0000052e <.L96>:
          char c = digit < 10 ? '0' + digit : 'a' + digit;
     52e:	00f7f913          	andi	s2,a5,15
     532:	06190493          	addi	s1,s2,97
     536:	012ec463          	blt	t4,s2,53e <.L95>
     53a:	03090493          	addi	s1,s2,48

0000053e <.L95>:
          buffer[charCount++] = c;
     53e:	00198713          	addi	a4,s3,1

00000542 <.LVL130>:
     542:	00c10a93          	addi	s5,sp,12
     546:	00ea8933          	add	s2,s5,a4
     54a:	fe990fa3          	sb	s1,-1(s2)
          uu >>= 4;
     54e:	8391                	srli	a5,a5,0x4

00000550 <.LBE241>:
      while (uu);
     550:	fff1                	bnez	a5,52c <.L106>
  char* p = buffer + charCount - 1;
     552:	00c10a13          	addi	s4,sp,12
     556:	013a07b3          	add	a5,s4,s3

0000055a <.LBB242>:
  for (unsigned i = 0; i < charCount; ++i)
     55a:	41e789b3          	sub	s3,a5,t5

0000055e <.LVL133>:
     55e:	0079f493          	andi	s1,s3,7

00000562 <.LVL134>:
     562:	c8a5                	beqz	s1,5d2 <.L97>
     564:	4a85                	li	s5,1
     566:	05548f63          	beq	s1,s5,5c4 <.L263>
     56a:	4909                	li	s2,2

0000056c <.LVL135>:
     56c:	05248763          	beq	s1,s2,5ba <.L264>
     570:	4a0d                	li	s4,3

00000572 <.LVL136>:
     572:	03448f63          	beq	s1,s4,5b0 <.L265>
     576:	4991                	li	s3,4
     578:	03348763          	beq	s1,s3,5a6 <.L266>
     57c:	4a95                	li	s5,5
     57e:	01548f63          	beq	s1,s5,59c <.L267>
     582:	4919                	li	s2,6
     584:	01248763          	beq	s1,s2,592 <.L268>

00000588 <.LVL137>:
    whisperPutc(*p--);
     588:	0007c483          	lbu	s1,0(a5)
     58c:	17fd                	addi	a5,a5,-1

0000058e <.LBB243>:
  *(volatile char*)(STDOUT) = c;
     58e:	00980023          	sb	s1,0(a6)

00000592 <.L268>:
    whisperPutc(*p--);
     592:	0007ca03          	lbu	s4,0(a5)
     596:	17fd                	addi	a5,a5,-1

00000598 <.LBB260>:
  *(volatile char*)(STDOUT) = c;
     598:	01480023          	sb	s4,0(a6)

0000059c <.L267>:
    whisperPutc(*p--);
     59c:	0007c983          	lbu	s3,0(a5)
     5a0:	17fd                	addi	a5,a5,-1

000005a2 <.LBB261>:
  *(volatile char*)(STDOUT) = c;
     5a2:	01380023          	sb	s3,0(a6)

000005a6 <.L266>:
    whisperPutc(*p--);
     5a6:	0007ca83          	lbu	s5,0(a5)
     5aa:	17fd                	addi	a5,a5,-1

000005ac <.LBB262>:
  *(volatile char*)(STDOUT) = c;
     5ac:	01580023          	sb	s5,0(a6)

000005b0 <.L265>:
    whisperPutc(*p--);
     5b0:	0007c903          	lbu	s2,0(a5)
     5b4:	17fd                	addi	a5,a5,-1

000005b6 <.LBB263>:
  *(volatile char*)(STDOUT) = c;
     5b6:	01280023          	sb	s2,0(a6)

000005ba <.L264>:
    whisperPutc(*p--);
     5ba:	0007c483          	lbu	s1,0(a5)
     5be:	17fd                	addi	a5,a5,-1

000005c0 <.LBB264>:
  *(volatile char*)(STDOUT) = c;
     5c0:	00980023          	sb	s1,0(a6)

000005c4 <.L263>:
    whisperPutc(*p--);
     5c4:	0007ca03          	lbu	s4,0(a5)
     5c8:	17fd                	addi	a5,a5,-1

000005ca <.LBB265>:
  *(volatile char*)(STDOUT) = c;
     5ca:	01480023          	sb	s4,0(a6)

000005ce <.LBE265>:
  for (unsigned i = 0; i < charCount; ++i)
     5ce:	05e78563          	beq	a5,t5,618 <.L317>

000005d2 <.L97>:
    whisperPutc(*p--);
     5d2:	0007c983          	lbu	s3,0(a5)

000005d6 <.LBB266>:
     5d6:	17e1                	addi	a5,a5,-8

000005d8 <.LBB267>:
  *(volatile char*)(STDOUT) = c;
     5d8:	01380023          	sb	s3,0(a6)

000005dc <.LBE267>:
    whisperPutc(*p--);
     5dc:	0077ca83          	lbu	s5,7(a5)

000005e0 <.LBB268>:
  *(volatile char*)(STDOUT) = c;
     5e0:	01580023          	sb	s5,0(a6)

000005e4 <.LBE268>:
    whisperPutc(*p--);
     5e4:	0067c903          	lbu	s2,6(a5)

000005e8 <.LBB269>:
  *(volatile char*)(STDOUT) = c;
     5e8:	01280023          	sb	s2,0(a6)

000005ec <.LBE269>:
    whisperPutc(*p--);
     5ec:	0057c483          	lbu	s1,5(a5)

000005f0 <.LBB270>:
  *(volatile char*)(STDOUT) = c;
     5f0:	00980023          	sb	s1,0(a6)

000005f4 <.LBE270>:
    whisperPutc(*p--);
     5f4:	0047ca03          	lbu	s4,4(a5)

000005f8 <.LBB271>:
  *(volatile char*)(STDOUT) = c;
     5f8:	01480023          	sb	s4,0(a6)

000005fc <.LBE271>:
    whisperPutc(*p--);
     5fc:	0037c983          	lbu	s3,3(a5)

00000600 <.LBB272>:
  *(volatile char*)(STDOUT) = c;
     600:	01380023          	sb	s3,0(a6)

00000604 <.LBE272>:
    whisperPutc(*p--);
     604:	0027ca83          	lbu	s5,2(a5)

00000608 <.LBB273>:
  *(volatile char*)(STDOUT) = c;
     608:	01580023          	sb	s5,0(a6)

0000060c <.LBE273>:
    whisperPutc(*p--);
     60c:	0017c903          	lbu	s2,1(a5)

00000610 <.LBB274>:
  *(volatile char*)(STDOUT) = c;
     610:	01280023          	sb	s2,0(a6)

00000614 <.LBE274>:
  for (unsigned i = 0; i < charCount; ++i)
     614:	fbe79fe3          	bne	a5,t5,5d2 <.L97>

00000618 <.L317>:
          count += whisperPrintInt(va_arg(ap, int), 16);
     618:	953a                	add	a0,a0,a4
          break;
     61a:	b395                	j	37e <.L71>

0000061c <.L81>:
          count += whisperPrintDecimal((unsigned) va_arg(ap, unsigned));
     61c:	0005a983          	lw	s3,0(a1)
     620:	0591                	addi	a1,a1,4

00000622 <.LBB336>:
  if (neg)
     622:	87ce                	mv	a5,s3
     624:	5e09c963          	bltz	s3,c16 <.L336>

00000628 <.L90>:
     628:	4701                	li	a4,0

0000062a <.L91>:
      char c = '0' + (value % 10);
     62a:	03c7ea33          	rem	s4,a5,t3
      buffer[charCount++] = c;
     62e:	00c10913          	addi	s2,sp,12
     632:	84ba                	mv	s1,a4
     634:	0705                	addi	a4,a4,1

00000636 <.LVL168>:
     636:	00e90ab3          	add	s5,s2,a4
     63a:	893a                	mv	s2,a4
      value = value / 10;
     63c:	03c7c7b3          	div	a5,a5,t3

00000640 <.LVL169>:
      char c = '0' + (value % 10);
     640:	030a0a13          	addi	s4,s4,48

00000644 <.LVL170>:
      buffer[charCount++] = c;
     644:	ff4a8fa3          	sb	s4,-1(s5)

00000648 <.LBE280>:
  while (value);
     648:	cbf1                	beqz	a5,71c <.L323>

0000064a <.LBB281>:
      char c = '0' + (value % 10);
     64a:	03c7ea33          	rem	s4,a5,t3

0000064e <.LVL171>:
     64e:	84ba                	mv	s1,a4
      buffer[charCount++] = c;
     650:	00c10a93          	addi	s5,sp,12

00000654 <.LVL172>:
     654:	0705                	addi	a4,a4,1

00000656 <.LVL173>:
     656:	9aba                	add	s5,s5,a4

00000658 <.LVL174>:
      value = value / 10;
     658:	03c7c7b3          	div	a5,a5,t3

0000065c <.LVL175>:
      char c = '0' + (value % 10);
     65c:	030a0a13          	addi	s4,s4,48
      buffer[charCount++] = c;
     660:	ff4a8fa3          	sb	s4,-1(s5)

00000664 <.LBE281>:
  while (value);
     664:	cfc5                	beqz	a5,71c <.L323>

00000666 <.LBB282>:
      char c = '0' + (value % 10);
     666:	03c7ea33          	rem	s4,a5,t3
     66a:	84ba                	mv	s1,a4

0000066c <.LVL176>:
      buffer[charCount++] = c;
     66c:	00c10a93          	addi	s5,sp,12

00000670 <.LVL177>:
     670:	00290713          	addi	a4,s2,2

00000674 <.LVL178>:
     674:	9aba                	add	s5,s5,a4

00000676 <.LVL179>:
      value = value / 10;
     676:	03c7c7b3          	div	a5,a5,t3

0000067a <.LVL180>:
      char c = '0' + (value % 10);
     67a:	030a0a13          	addi	s4,s4,48
      buffer[charCount++] = c;
     67e:	ff4a8fa3          	sb	s4,-1(s5)

00000682 <.LBE282>:
  while (value);
     682:	cfc9                	beqz	a5,71c <.L323>

00000684 <.LBB283>:
      char c = '0' + (value % 10);
     684:	03c7ea33          	rem	s4,a5,t3
     688:	84ba                	mv	s1,a4
      buffer[charCount++] = c;
     68a:	00c10a93          	addi	s5,sp,12

0000068e <.LVL181>:
     68e:	00390713          	addi	a4,s2,3

00000692 <.LVL182>:
     692:	9aba                	add	s5,s5,a4

00000694 <.LVL183>:
      value = value / 10;
     694:	03c7c7b3          	div	a5,a5,t3

00000698 <.LVL184>:
      char c = '0' + (value % 10);
     698:	030a0a13          	addi	s4,s4,48
      buffer[charCount++] = c;
     69c:	ff4a8fa3          	sb	s4,-1(s5)

000006a0 <.LBE283>:
  while (value);
     6a0:	cfb5                	beqz	a5,71c <.L323>

000006a2 <.LBB284>:
      char c = '0' + (value % 10);
     6a2:	03c7ea33          	rem	s4,a5,t3
     6a6:	84ba                	mv	s1,a4
      buffer[charCount++] = c;
     6a8:	00c10a93          	addi	s5,sp,12

000006ac <.LVL185>:
     6ac:	00490713          	addi	a4,s2,4

000006b0 <.LVL186>:
     6b0:	9aba                	add	s5,s5,a4

000006b2 <.LVL187>:
      value = value / 10;
     6b2:	03c7c7b3          	div	a5,a5,t3

000006b6 <.LVL188>:
      char c = '0' + (value % 10);
     6b6:	030a0a13          	addi	s4,s4,48
      buffer[charCount++] = c;
     6ba:	ff4a8fa3          	sb	s4,-1(s5)

000006be <.LBE284>:
  while (value);
     6be:	cfb9                	beqz	a5,71c <.L323>

000006c0 <.LBB285>:
      char c = '0' + (value % 10);
     6c0:	03c7ea33          	rem	s4,a5,t3
     6c4:	84ba                	mv	s1,a4
      buffer[charCount++] = c;
     6c6:	00c10a93          	addi	s5,sp,12

000006ca <.LVL189>:
     6ca:	00590713          	addi	a4,s2,5

000006ce <.LVL190>:
     6ce:	9aba                	add	s5,s5,a4

000006d0 <.LVL191>:
      value = value / 10;
     6d0:	03c7c7b3          	div	a5,a5,t3

000006d4 <.LVL192>:
      char c = '0' + (value % 10);
     6d4:	030a0a13          	addi	s4,s4,48
      buffer[charCount++] = c;
     6d8:	ff4a8fa3          	sb	s4,-1(s5)

000006dc <.LBE285>:
  while (value);
     6dc:	c3a1                	beqz	a5,71c <.L323>

000006de <.LBB286>:
      char c = '0' + (value % 10);
     6de:	03c7ea33          	rem	s4,a5,t3
     6e2:	84ba                	mv	s1,a4
      buffer[charCount++] = c;
     6e4:	00c10a93          	addi	s5,sp,12

000006e8 <.LVL193>:
     6e8:	00690713          	addi	a4,s2,6

000006ec <.LVL194>:
     6ec:	9aba                	add	s5,s5,a4

000006ee <.LVL195>:
      value = value / 10;
     6ee:	03c7c7b3          	div	a5,a5,t3

000006f2 <.LVL196>:
      char c = '0' + (value % 10);
     6f2:	030a0a13          	addi	s4,s4,48
      buffer[charCount++] = c;
     6f6:	ff4a8fa3          	sb	s4,-1(s5)

000006fa <.LBE286>:
  while (value);
     6fa:	c38d                	beqz	a5,71c <.L323>

000006fc <.LBB287>:
      char c = '0' + (value % 10);
     6fc:	03c7ea33          	rem	s4,a5,t3
     700:	84ba                	mv	s1,a4
      buffer[charCount++] = c;
     702:	00790713          	addi	a4,s2,7

00000706 <.LVL198>:
     706:	00c10913          	addi	s2,sp,12

0000070a <.LVL199>:
     70a:	00e90ab3          	add	s5,s2,a4
      value = value / 10;
     70e:	03c7c7b3          	div	a5,a5,t3

00000712 <.LVL200>:
      char c = '0' + (value % 10);
     712:	030a0a13          	addi	s4,s4,48
      buffer[charCount++] = c;
     716:	ff4a8fa3          	sb	s4,-1(s5)

0000071a <.LBE287>:
  while (value);
     71a:	fb81                	bnez	a5,62a <.L91>

0000071c <.L323>:
  char* p = buffer + charCount - 1;
     71c:	00c10913          	addi	s2,sp,12
     720:	009907b3          	add	a5,s2,s1

00000724 <.LBB288>:
  for (unsigned i = 0; i < charCount; ++i)
     724:	41e78ab3          	sub	s5,a5,t5
     728:	007af913          	andi	s2,s5,7
     72c:	06090963          	beqz	s2,79e <.L92>
     730:	4a05                	li	s4,1
     732:	05490f63          	beq	s2,s4,790 <.L257>
     736:	4a89                	li	s5,2
     738:	05590763          	beq	s2,s5,786 <.L258>
     73c:	4a0d                	li	s4,3
     73e:	03490f63          	beq	s2,s4,77c <.L259>
     742:	4a91                	li	s5,4
     744:	03590763          	beq	s2,s5,772 <.L260>
     748:	4a15                	li	s4,5
     74a:	01490f63          	beq	s2,s4,768 <.L261>
     74e:	4a99                	li	s5,6
     750:	01590763          	beq	s2,s5,75e <.L262>

00000754 <.LVL203>:
    whisperPutc(*p--);
     754:	0007c903          	lbu	s2,0(a5)
     758:	17fd                	addi	a5,a5,-1

0000075a <.LBB289>:
  *(volatile char*)(STDOUT) = c;
     75a:	01280023          	sb	s2,0(a6)

0000075e <.L262>:
    whisperPutc(*p--);
     75e:	0007ca03          	lbu	s4,0(a5)
     762:	17fd                	addi	a5,a5,-1

00000764 <.LBB306>:
  *(volatile char*)(STDOUT) = c;
     764:	01480023          	sb	s4,0(a6)

00000768 <.L261>:
    whisperPutc(*p--);
     768:	0007ca83          	lbu	s5,0(a5)
     76c:	17fd                	addi	a5,a5,-1

0000076e <.LBB307>:
  *(volatile char*)(STDOUT) = c;
     76e:	01580023          	sb	s5,0(a6)

00000772 <.L260>:
    whisperPutc(*p--);
     772:	0007c903          	lbu	s2,0(a5)
     776:	17fd                	addi	a5,a5,-1

00000778 <.LBB308>:
  *(volatile char*)(STDOUT) = c;
     778:	01280023          	sb	s2,0(a6)

0000077c <.L259>:
    whisperPutc(*p--);
     77c:	0007ca03          	lbu	s4,0(a5)
     780:	17fd                	addi	a5,a5,-1

00000782 <.LBB309>:
  *(volatile char*)(STDOUT) = c;
     782:	01480023          	sb	s4,0(a6)

00000786 <.L258>:
    whisperPutc(*p--);
     786:	0007ca83          	lbu	s5,0(a5)
     78a:	17fd                	addi	a5,a5,-1

0000078c <.LBB310>:
  *(volatile char*)(STDOUT) = c;
     78c:	01580023          	sb	s5,0(a6)

00000790 <.L257>:
    whisperPutc(*p--);
     790:	0007c903          	lbu	s2,0(a5)
     794:	17fd                	addi	a5,a5,-1

00000796 <.LBB311>:
  *(volatile char*)(STDOUT) = c;
     796:	01280023          	sb	s2,0(a6)

0000079a <.LBE311>:
  for (unsigned i = 0; i < charCount; ++i)
     79a:	05e78563          	beq	a5,t5,7e4 <.L322>

0000079e <.L92>:
    whisperPutc(*p--);
     79e:	0007ca03          	lbu	s4,0(a5)

000007a2 <.LBB312>:
     7a2:	17e1                	addi	a5,a5,-8

000007a4 <.LBB313>:
  *(volatile char*)(STDOUT) = c;
     7a4:	01480023          	sb	s4,0(a6)

000007a8 <.LBE313>:
    whisperPutc(*p--);
     7a8:	0077ca83          	lbu	s5,7(a5)

000007ac <.LBB314>:
  *(volatile char*)(STDOUT) = c;
     7ac:	01580023          	sb	s5,0(a6)

000007b0 <.LBE314>:
    whisperPutc(*p--);
     7b0:	0067c903          	lbu	s2,6(a5)

000007b4 <.LBB315>:
  *(volatile char*)(STDOUT) = c;
     7b4:	01280023          	sb	s2,0(a6)

000007b8 <.LBE315>:
    whisperPutc(*p--);
     7b8:	0057ca03          	lbu	s4,5(a5)

000007bc <.LBB316>:
  *(volatile char*)(STDOUT) = c;
     7bc:	01480023          	sb	s4,0(a6)

000007c0 <.LBE316>:
    whisperPutc(*p--);
     7c0:	0047ca83          	lbu	s5,4(a5)

000007c4 <.LBB317>:
  *(volatile char*)(STDOUT) = c;
     7c4:	01580023          	sb	s5,0(a6)

000007c8 <.LBE317>:
    whisperPutc(*p--);
     7c8:	0037c903          	lbu	s2,3(a5)

000007cc <.LBB318>:
  *(volatile char*)(STDOUT) = c;
     7cc:	01280023          	sb	s2,0(a6)

000007d0 <.LBE318>:
    whisperPutc(*p--);
     7d0:	0027ca03          	lbu	s4,2(a5)

000007d4 <.LBB319>:
  *(volatile char*)(STDOUT) = c;
     7d4:	01480023          	sb	s4,0(a6)

000007d8 <.LBE319>:
    whisperPutc(*p--);
     7d8:	0017ca83          	lbu	s5,1(a5)

000007dc <.LBB320>:
  *(volatile char*)(STDOUT) = c;
     7dc:	01580023          	sb	s5,0(a6)

000007e0 <.LBE320>:
  for (unsigned i = 0; i < charCount; ++i)
     7e0:	fbe79fe3          	bne	a5,t5,79e <.L92>

000007e4 <.L322>:
  if (neg)
     7e4:	e209dae3          	bgez	s3,618 <.L317>
    charCount++;
     7e8:	00248713          	addi	a4,s1,2

000007ec <.LBE336>:
          count += whisperPrintInt(va_arg(ap, int), 16);
     7ec:	953a                	add	a0,a0,a4
          break;
     7ee:	be41                	j	37e <.L71>

000007f0 <.L82>:
          count += whisperPuts(va_arg(ap, char*));
     7f0:	419c                	lw	a5,0(a1)
     7f2:	0591                	addi	a1,a1,4

000007f4 <.LBB337>:
  while (*s)
     7f4:	0007c483          	lbu	s1,0(a5)
     7f8:	ccb9                	beqz	s1,856 <.L101>

000007fa <.L100>:
  *(volatile char*)(STDOUT) = c;
     7fa:	00980023          	sb	s1,0(a6)

000007fe <.LBE228>:
  while (*s)
     7fe:	0017c983          	lbu	s3,1(a5)
     802:	04098a63          	beqz	s3,856 <.L101>

00000806 <.LBB229>:
  *(volatile char*)(STDOUT) = c;
     806:	01380023          	sb	s3,0(a6)

0000080a <.LBE229>:
  while (*s)
     80a:	0027c483          	lbu	s1,2(a5)
     80e:	c4a1                	beqz	s1,856 <.L101>

00000810 <.LBB230>:
  *(volatile char*)(STDOUT) = c;
     810:	00980023          	sb	s1,0(a6)

00000814 <.LBE230>:
  while (*s)
     814:	0037c703          	lbu	a4,3(a5)
     818:	cf1d                	beqz	a4,856 <.L101>

0000081a <.LBB231>:
  *(volatile char*)(STDOUT) = c;
     81a:	00e80023          	sb	a4,0(a6)

0000081e <.LBE231>:
  while (*s)
     81e:	0047c903          	lbu	s2,4(a5)
     822:	02090a63          	beqz	s2,856 <.L101>

00000826 <.LBB232>:
  *(volatile char*)(STDOUT) = c;
     826:	01280023          	sb	s2,0(a6)

0000082a <.LBE232>:
  while (*s)
     82a:	0057ca03          	lbu	s4,5(a5)
     82e:	020a0463          	beqz	s4,856 <.L101>

00000832 <.LBB233>:
  *(volatile char*)(STDOUT) = c;
     832:	01480023          	sb	s4,0(a6)

00000836 <.LBE233>:
  while (*s)
     836:	0067ca83          	lbu	s5,6(a5)
     83a:	000a8e63          	beqz	s5,856 <.L101>

0000083e <.LBB234>:
  *(volatile char*)(STDOUT) = c;
     83e:	01580023          	sb	s5,0(a6)

00000842 <.LBE234>:
  while (*s)
     842:	0077c983          	lbu	s3,7(a5)
     846:	00098863          	beqz	s3,856 <.L101>
    whisperPutc(*s++);
     84a:	07a1                	addi	a5,a5,8

0000084c <.LBB235>:
  *(volatile char*)(STDOUT) = c;
     84c:	01380023          	sb	s3,0(a6)

00000850 <.LBE235>:
  while (*s)
     850:	0007c483          	lbu	s1,0(a5)
     854:	f0dd                	bnez	s1,7fa <.L100>

00000856 <.L101>:
          count += whisperPuts(va_arg(ap, char*));
     856:	0505                	addi	a0,a0,1
          break;
     858:	b61d                	j	37e <.L71>

0000085a <.L84>:
          count += whisperPrintDecimal(va_arg(ap, int));
     85a:	0005a983          	lw	s3,0(a1)
     85e:	0591                	addi	a1,a1,4

00000860 <.LBB338>:
  if (neg)
     860:	87ce                	mv	a5,s3
     862:	3a09c563          	bltz	s3,c0c <.L337>

00000866 <.L86>:
     866:	4701                	li	a4,0

00000868 <.L87>:
      char c = '0' + (value % 10);
     868:	03c7ea33          	rem	s4,a5,t3
     86c:	84ba                	mv	s1,a4
      buffer[charCount++] = c;
     86e:	00c10a93          	addi	s5,sp,12
     872:	0705                	addi	a4,a4,1

00000874 <.LVL236>:
     874:	9aba                	add	s5,s5,a4
     876:	893a                	mv	s2,a4
      value = value / 10;
     878:	03c7c7b3          	div	a5,a5,t3

0000087c <.LVL237>:
      char c = '0' + (value % 10);
     87c:	030a0a13          	addi	s4,s4,48

00000880 <.LVL238>:
      buffer[charCount++] = c;
     880:	ff4a8fa3          	sb	s4,-1(s5)

00000884 <.LBE340>:
  while (value);
     884:	cbf1                	beqz	a5,958 <.L319>

00000886 <.LBB341>:
      char c = '0' + (value % 10);
     886:	03c7ea33          	rem	s4,a5,t3

0000088a <.LVL239>:
     88a:	84ba                	mv	s1,a4
      buffer[charCount++] = c;
     88c:	00c10a93          	addi	s5,sp,12

00000890 <.LVL240>:
     890:	0705                	addi	a4,a4,1

00000892 <.LVL241>:
     892:	9aba                	add	s5,s5,a4

00000894 <.LVL242>:
      value = value / 10;
     894:	03c7c7b3          	div	a5,a5,t3

00000898 <.LVL243>:
      char c = '0' + (value % 10);
     898:	030a0a13          	addi	s4,s4,48
      buffer[charCount++] = c;
     89c:	ff4a8fa3          	sb	s4,-1(s5)

000008a0 <.LBE341>:
  while (value);
     8a0:	cfc5                	beqz	a5,958 <.L319>

000008a2 <.LBB342>:
      char c = '0' + (value % 10);
     8a2:	03c7ea33          	rem	s4,a5,t3
     8a6:	84ba                	mv	s1,a4

000008a8 <.LVL244>:
      buffer[charCount++] = c;
     8a8:	00c10a93          	addi	s5,sp,12

000008ac <.LVL245>:
     8ac:	00290713          	addi	a4,s2,2

000008b0 <.LVL246>:
     8b0:	9aba                	add	s5,s5,a4

000008b2 <.LVL247>:
      value = value / 10;
     8b2:	03c7c7b3          	div	a5,a5,t3

000008b6 <.LVL248>:
      char c = '0' + (value % 10);
     8b6:	030a0a13          	addi	s4,s4,48
      buffer[charCount++] = c;
     8ba:	ff4a8fa3          	sb	s4,-1(s5)

000008be <.LBE342>:
  while (value);
     8be:	cfc9                	beqz	a5,958 <.L319>

000008c0 <.LBB343>:
      char c = '0' + (value % 10);
     8c0:	03c7ea33          	rem	s4,a5,t3
     8c4:	84ba                	mv	s1,a4
      buffer[charCount++] = c;
     8c6:	00c10a93          	addi	s5,sp,12

000008ca <.LVL249>:
     8ca:	00390713          	addi	a4,s2,3

000008ce <.LVL250>:
     8ce:	9aba                	add	s5,s5,a4

000008d0 <.LVL251>:
      value = value / 10;
     8d0:	03c7c7b3          	div	a5,a5,t3

000008d4 <.LVL252>:
      char c = '0' + (value % 10);
     8d4:	030a0a13          	addi	s4,s4,48
      buffer[charCount++] = c;
     8d8:	ff4a8fa3          	sb	s4,-1(s5)

000008dc <.LBE343>:
  while (value);
     8dc:	cfb5                	beqz	a5,958 <.L319>

000008de <.LBB344>:
      char c = '0' + (value % 10);
     8de:	03c7ea33          	rem	s4,a5,t3
     8e2:	84ba                	mv	s1,a4
      buffer[charCount++] = c;
     8e4:	00c10a93          	addi	s5,sp,12

000008e8 <.LVL253>:
     8e8:	00490713          	addi	a4,s2,4

000008ec <.LVL254>:
     8ec:	9aba                	add	s5,s5,a4

000008ee <.LVL255>:
      value = value / 10;
     8ee:	03c7c7b3          	div	a5,a5,t3

000008f2 <.LVL256>:
      char c = '0' + (value % 10);
     8f2:	030a0a13          	addi	s4,s4,48
      buffer[charCount++] = c;
     8f6:	ff4a8fa3          	sb	s4,-1(s5)

000008fa <.LBE344>:
  while (value);
     8fa:	cfb9                	beqz	a5,958 <.L319>

000008fc <.LBB345>:
      char c = '0' + (value % 10);
     8fc:	03c7ea33          	rem	s4,a5,t3
     900:	84ba                	mv	s1,a4
      buffer[charCount++] = c;
     902:	00c10a93          	addi	s5,sp,12

00000906 <.LVL257>:
     906:	00590713          	addi	a4,s2,5

0000090a <.LVL258>:
     90a:	9aba                	add	s5,s5,a4

0000090c <.LVL259>:
      value = value / 10;
     90c:	03c7c7b3          	div	a5,a5,t3

00000910 <.LVL260>:
      char c = '0' + (value % 10);
     910:	030a0a13          	addi	s4,s4,48
      buffer[charCount++] = c;
     914:	ff4a8fa3          	sb	s4,-1(s5)

00000918 <.LBE345>:
  while (value);
     918:	c3a1                	beqz	a5,958 <.L319>

0000091a <.LBB346>:
      char c = '0' + (value % 10);
     91a:	03c7ea33          	rem	s4,a5,t3
     91e:	84ba                	mv	s1,a4
      buffer[charCount++] = c;
     920:	00c10a93          	addi	s5,sp,12

00000924 <.LVL261>:
     924:	00690713          	addi	a4,s2,6

00000928 <.LVL262>:
     928:	9aba                	add	s5,s5,a4

0000092a <.LVL263>:
      value = value / 10;
     92a:	03c7c7b3          	div	a5,a5,t3

0000092e <.LVL264>:
      char c = '0' + (value % 10);
     92e:	030a0a13          	addi	s4,s4,48
      buffer[charCount++] = c;
     932:	ff4a8fa3          	sb	s4,-1(s5)

00000936 <.LBE346>:
  while (value);
     936:	c38d                	beqz	a5,958 <.L319>

00000938 <.LBB347>:
      char c = '0' + (value % 10);
     938:	03c7ea33          	rem	s4,a5,t3
     93c:	84ba                	mv	s1,a4
      buffer[charCount++] = c;
     93e:	00790713          	addi	a4,s2,7

00000942 <.LVL266>:
     942:	00c10913          	addi	s2,sp,12

00000946 <.LVL267>:
     946:	00e90ab3          	add	s5,s2,a4
      value = value / 10;
     94a:	03c7c7b3          	div	a5,a5,t3

0000094e <.LVL268>:
      char c = '0' + (value % 10);
     94e:	030a0a13          	addi	s4,s4,48
      buffer[charCount++] = c;
     952:	ff4a8fa3          	sb	s4,-1(s5)

00000956 <.LBE347>:
  while (value);
     956:	fb89                	bnez	a5,868 <.L87>

00000958 <.L319>:
  char* p = buffer + charCount - 1;
     958:	00c10913          	addi	s2,sp,12
     95c:	009907b3          	add	a5,s2,s1

00000960 <.LBB348>:
  for (unsigned i = 0; i < charCount; ++i)
     960:	41e78ab3          	sub	s5,a5,t5
     964:	007af913          	andi	s2,s5,7
     968:	06090963          	beqz	s2,9da <.L88>
     96c:	4a05                	li	s4,1
     96e:	05490f63          	beq	s2,s4,9cc <.L250>
     972:	4a89                	li	s5,2
     974:	05590763          	beq	s2,s5,9c2 <.L251>
     978:	4a0d                	li	s4,3
     97a:	03490f63          	beq	s2,s4,9b8 <.L252>
     97e:	4a91                	li	s5,4
     980:	03590763          	beq	s2,s5,9ae <.L253>
     984:	4a15                	li	s4,5
     986:	01490f63          	beq	s2,s4,9a4 <.L254>
     98a:	4a99                	li	s5,6
     98c:	01590763          	beq	s2,s5,99a <.L255>

00000990 <.LVL271>:
    whisperPutc(*p--);
     990:	0007c903          	lbu	s2,0(a5)
     994:	17fd                	addi	a5,a5,-1

00000996 <.LBB349>:
  *(volatile char*)(STDOUT) = c;
     996:	01280023          	sb	s2,0(a6)

0000099a <.L255>:
    whisperPutc(*p--);
     99a:	0007ca03          	lbu	s4,0(a5)
     99e:	17fd                	addi	a5,a5,-1

000009a0 <.LBB366>:
  *(volatile char*)(STDOUT) = c;
     9a0:	01480023          	sb	s4,0(a6)

000009a4 <.L254>:
    whisperPutc(*p--);
     9a4:	0007ca83          	lbu	s5,0(a5)
     9a8:	17fd                	addi	a5,a5,-1

000009aa <.LBB367>:
  *(volatile char*)(STDOUT) = c;
     9aa:	01580023          	sb	s5,0(a6)

000009ae <.L253>:
    whisperPutc(*p--);
     9ae:	0007c903          	lbu	s2,0(a5)
     9b2:	17fd                	addi	a5,a5,-1

000009b4 <.LBB368>:
  *(volatile char*)(STDOUT) = c;
     9b4:	01280023          	sb	s2,0(a6)

000009b8 <.L252>:
    whisperPutc(*p--);
     9b8:	0007ca03          	lbu	s4,0(a5)
     9bc:	17fd                	addi	a5,a5,-1

000009be <.LBB369>:
  *(volatile char*)(STDOUT) = c;
     9be:	01480023          	sb	s4,0(a6)

000009c2 <.L251>:
    whisperPutc(*p--);
     9c2:	0007ca83          	lbu	s5,0(a5)
     9c6:	17fd                	addi	a5,a5,-1

000009c8 <.LBB370>:
  *(volatile char*)(STDOUT) = c;
     9c8:	01580023          	sb	s5,0(a6)

000009cc <.L250>:
    whisperPutc(*p--);
     9cc:	0007c903          	lbu	s2,0(a5)
     9d0:	17fd                	addi	a5,a5,-1

000009d2 <.LBB371>:
  *(volatile char*)(STDOUT) = c;
     9d2:	01280023          	sb	s2,0(a6)

000009d6 <.LBE371>:
  for (unsigned i = 0; i < charCount; ++i)
     9d6:	e1e787e3          	beq	a5,t5,7e4 <.L322>

000009da <.L88>:
    whisperPutc(*p--);
     9da:	0007ca03          	lbu	s4,0(a5)

000009de <.LBB372>:
     9de:	17e1                	addi	a5,a5,-8

000009e0 <.LBB373>:
  *(volatile char*)(STDOUT) = c;
     9e0:	01480023          	sb	s4,0(a6)

000009e4 <.LBE373>:
    whisperPutc(*p--);
     9e4:	0077ca83          	lbu	s5,7(a5)

000009e8 <.LBB374>:
  *(volatile char*)(STDOUT) = c;
     9e8:	01580023          	sb	s5,0(a6)

000009ec <.LBE374>:
    whisperPutc(*p--);
     9ec:	0067c903          	lbu	s2,6(a5)

000009f0 <.LBB375>:
  *(volatile char*)(STDOUT) = c;
     9f0:	01280023          	sb	s2,0(a6)

000009f4 <.LBE375>:
    whisperPutc(*p--);
     9f4:	0057ca03          	lbu	s4,5(a5)

000009f8 <.LBB376>:
  *(volatile char*)(STDOUT) = c;
     9f8:	01480023          	sb	s4,0(a6)

000009fc <.LBE376>:
    whisperPutc(*p--);
     9fc:	0047ca83          	lbu	s5,4(a5)

00000a00 <.LBB377>:
  *(volatile char*)(STDOUT) = c;
     a00:	01580023          	sb	s5,0(a6)

00000a04 <.LBE377>:
    whisperPutc(*p--);
     a04:	0037c903          	lbu	s2,3(a5)

00000a08 <.LBB378>:
  *(volatile char*)(STDOUT) = c;
     a08:	01280023          	sb	s2,0(a6)

00000a0c <.LBE378>:
    whisperPutc(*p--);
     a0c:	0027ca03          	lbu	s4,2(a5)

00000a10 <.LBB379>:
  *(volatile char*)(STDOUT) = c;
     a10:	01480023          	sb	s4,0(a6)

00000a14 <.LBE379>:
    whisperPutc(*p--);
     a14:	0017ca83          	lbu	s5,1(a5)

00000a18 <.LBB380>:
  *(volatile char*)(STDOUT) = c;
     a18:	01580023          	sb	s5,0(a6)

00000a1c <.LBE380>:
  for (unsigned i = 0; i < charCount; ++i)
     a1c:	fbe79fe3          	bne	a5,t5,9da <.L88>
     a20:	b3d1                	j	7e4 <.L322>

00000a22 <.L83>:
  unsigned uu = value;
     a22:	4184                	lw	s1,0(a1)
  int charCount = 0;
     a24:	4781                	li	a5,0

00000a26 <.LBE384>:
          count += whisperPrintInt(va_arg(ap, int), 8);
     a26:	0591                	addi	a1,a1,4

00000a28 <.L98>:
          char c = '0' + (uu & 7);
     a28:	0074f913          	andi	s2,s1,7
     a2c:	873e                	mv	a4,a5
          buffer[charCount++] = c;
     a2e:	00c10a13          	addi	s4,sp,12
     a32:	0785                	addi	a5,a5,1

00000a34 <.LVL295>:
     a34:	00fa0ab3          	add	s5,s4,a5
          char c = '0' + (uu & 7);
     a38:	03090993          	addi	s3,s2,48
          buffer[charCount++] = c;
     a3c:	ff3a8fa3          	sb	s3,-1(s5)
          uu >>= 3;
     a40:	0034d913          	srli	s2,s1,0x3
          buffer[charCount++] = c;
     a44:	8abe                	mv	s5,a5

00000a46 <.LBE386>:
      while (uu);
     a46:	0e090563          	beqz	s2,b30 <.L321>

00000a4a <.LBB387>:
          char c = '0' + (uu & 7);
     a4a:	00797993          	andi	s3,s2,7
     a4e:	873e                	mv	a4,a5
          buffer[charCount++] = c;
     a50:	00c10a13          	addi	s4,sp,12
     a54:	0785                	addi	a5,a5,1
          char c = '0' + (uu & 7);
     a56:	03098913          	addi	s2,s3,48
          buffer[charCount++] = c;
     a5a:	9a3e                	add	s4,s4,a5
     a5c:	ff2a0fa3          	sb	s2,-1(s4)
          uu >>= 3;
     a60:	0064d993          	srli	s3,s1,0x6

00000a64 <.LBE387>:
      while (uu);
     a64:	0c098663          	beqz	s3,b30 <.L321>

00000a68 <.LBB388>:
          char c = '0' + (uu & 7);
     a68:	0079f913          	andi	s2,s3,7
          buffer[charCount++] = c;
     a6c:	00c10a13          	addi	s4,sp,12
     a70:	873e                	mv	a4,a5
     a72:	002a8793          	addi	a5,s5,2
     a76:	00fa09b3          	add	s3,s4,a5
          char c = '0' + (uu & 7);
     a7a:	03090913          	addi	s2,s2,48
          buffer[charCount++] = c;
     a7e:	ff298fa3          	sb	s2,-1(s3)
          uu >>= 3;
     a82:	0094da13          	srli	s4,s1,0x9

00000a86 <.LBE388>:
      while (uu);
     a86:	0a0a0563          	beqz	s4,b30 <.L321>

00000a8a <.LBB389>:
          char c = '0' + (uu & 7);
     a8a:	007a7993          	andi	s3,s4,7
          buffer[charCount++] = c;
     a8e:	00c10913          	addi	s2,sp,12
     a92:	873e                	mv	a4,a5
     a94:	003a8793          	addi	a5,s5,3
     a98:	00f90a33          	add	s4,s2,a5
          char c = '0' + (uu & 7);
     a9c:	03098993          	addi	s3,s3,48
          buffer[charCount++] = c;
     aa0:	ff3a0fa3          	sb	s3,-1(s4)
          uu >>= 3;
     aa4:	00c4d913          	srli	s2,s1,0xc

00000aa8 <.LBE389>:
      while (uu);
     aa8:	08090463          	beqz	s2,b30 <.L321>

00000aac <.LBB390>:
          char c = '0' + (uu & 7);
     aac:	00797993          	andi	s3,s2,7
     ab0:	873e                	mv	a4,a5
          buffer[charCount++] = c;
     ab2:	00c10a13          	addi	s4,sp,12
     ab6:	004a8793          	addi	a5,s5,4
          char c = '0' + (uu & 7);
     aba:	03098913          	addi	s2,s3,48
          buffer[charCount++] = c;
     abe:	9a3e                	add	s4,s4,a5
     ac0:	ff2a0fa3          	sb	s2,-1(s4)
          uu >>= 3;
     ac4:	00f4d993          	srli	s3,s1,0xf

00000ac8 <.LBE390>:
      while (uu);
     ac8:	06098463          	beqz	s3,b30 <.L321>

00000acc <.LBB391>:
          char c = '0' + (uu & 7);
     acc:	0079f913          	andi	s2,s3,7
          buffer[charCount++] = c;
     ad0:	00c10a13          	addi	s4,sp,12
     ad4:	873e                	mv	a4,a5
     ad6:	005a8793          	addi	a5,s5,5
     ada:	00fa09b3          	add	s3,s4,a5
          char c = '0' + (uu & 7);
     ade:	03090913          	addi	s2,s2,48
          buffer[charCount++] = c;
     ae2:	ff298fa3          	sb	s2,-1(s3)
          uu >>= 3;
     ae6:	0124da13          	srli	s4,s1,0x12

00000aea <.LBE391>:
      while (uu);
     aea:	040a0363          	beqz	s4,b30 <.L321>

00000aee <.LBB392>:
          char c = '0' + (uu & 7);
     aee:	007a7993          	andi	s3,s4,7
          buffer[charCount++] = c;
     af2:	00c10913          	addi	s2,sp,12
     af6:	873e                	mv	a4,a5
     af8:	006a8793          	addi	a5,s5,6
     afc:	00f90a33          	add	s4,s2,a5
          char c = '0' + (uu & 7);
     b00:	03098993          	addi	s3,s3,48
          buffer[charCount++] = c;
     b04:	ff3a0fa3          	sb	s3,-1(s4)
          uu >>= 3;
     b08:	0154d913          	srli	s2,s1,0x15

00000b0c <.LBE392>:
      while (uu);
     b0c:	02090263          	beqz	s2,b30 <.L321>

00000b10 <.LBB393>:
          buffer[charCount++] = c;
     b10:	873e                	mv	a4,a5
          char c = '0' + (uu & 7);
     b12:	00797a13          	andi	s4,s2,7
          buffer[charCount++] = c;
     b16:	007a8793          	addi	a5,s5,7
     b1a:	00c10a93          	addi	s5,sp,12
     b1e:	00fa89b3          	add	s3,s5,a5
          char c = '0' + (uu & 7);
     b22:	030a0913          	addi	s2,s4,48
          buffer[charCount++] = c;
     b26:	ff298fa3          	sb	s2,-1(s3)

00000b2a <.LVL304>:
          uu >>= 3;
     b2a:	80e1                	srli	s1,s1,0x18

00000b2c <.LBE393>:
      while (uu);
     b2c:	ee049ee3          	bnez	s1,a28 <.L98>

00000b30 <.L321>:
  char* p = buffer + charCount - 1;
     b30:	00c10a13          	addi	s4,sp,12
     b34:	9752                	add	a4,a4,s4

00000b36 <.LBB394>:
  for (unsigned i = 0; i < charCount; ++i)
     b36:	41e70ab3          	sub	s5,a4,t5
     b3a:	007af993          	andi	s3,s5,7
     b3e:	06098963          	beqz	s3,bb0 <.L99>
     b42:	4905                	li	s2,1
     b44:	05298f63          	beq	s3,s2,ba2 <.L270>
     b48:	4489                	li	s1,2
     b4a:	04998763          	beq	s3,s1,b98 <.L271>
     b4e:	4a0d                	li	s4,3
     b50:	03498f63          	beq	s3,s4,b8e <.L272>
     b54:	4a91                	li	s5,4
     b56:	03598763          	beq	s3,s5,b84 <.L273>
     b5a:	4915                	li	s2,5
     b5c:	01298f63          	beq	s3,s2,b7a <.L274>
     b60:	4499                	li	s1,6
     b62:	00998763          	beq	s3,s1,b70 <.L275>

00000b66 <.LVL307>:
    whisperPutc(*p--);
     b66:	00074983          	lbu	s3,0(a4)
     b6a:	177d                	addi	a4,a4,-1

00000b6c <.LBB395>:
  *(volatile char*)(STDOUT) = c;
     b6c:	01380023          	sb	s3,0(a6)

00000b70 <.L275>:
    whisperPutc(*p--);
     b70:	00074a03          	lbu	s4,0(a4)
     b74:	177d                	addi	a4,a4,-1

00000b76 <.LBB412>:
  *(volatile char*)(STDOUT) = c;
     b76:	01480023          	sb	s4,0(a6)

00000b7a <.L274>:
    whisperPutc(*p--);
     b7a:	00074a83          	lbu	s5,0(a4)
     b7e:	177d                	addi	a4,a4,-1

00000b80 <.LBB413>:
  *(volatile char*)(STDOUT) = c;
     b80:	01580023          	sb	s5,0(a6)

00000b84 <.L273>:
    whisperPutc(*p--);
     b84:	00074903          	lbu	s2,0(a4)
     b88:	177d                	addi	a4,a4,-1

00000b8a <.LBB414>:
  *(volatile char*)(STDOUT) = c;
     b8a:	01280023          	sb	s2,0(a6)

00000b8e <.L272>:
    whisperPutc(*p--);
     b8e:	00074483          	lbu	s1,0(a4)
     b92:	177d                	addi	a4,a4,-1

00000b94 <.LBB415>:
  *(volatile char*)(STDOUT) = c;
     b94:	00980023          	sb	s1,0(a6)

00000b98 <.L271>:
    whisperPutc(*p--);
     b98:	00074983          	lbu	s3,0(a4)
     b9c:	177d                	addi	a4,a4,-1

00000b9e <.LBB416>:
  *(volatile char*)(STDOUT) = c;
     b9e:	01380023          	sb	s3,0(a6)

00000ba2 <.L270>:
    whisperPutc(*p--);
     ba2:	00074a03          	lbu	s4,0(a4)
     ba6:	177d                	addi	a4,a4,-1

00000ba8 <.LBB417>:
  *(volatile char*)(STDOUT) = c;
     ba8:	01480023          	sb	s4,0(a6)

00000bac <.LBE417>:
  for (unsigned i = 0; i < charCount; ++i)
     bac:	05e70563          	beq	a4,t5,bf6 <.L320>

00000bb0 <.L99>:
    whisperPutc(*p--);
     bb0:	00074a83          	lbu	s5,0(a4)

00000bb4 <.LBB418>:
     bb4:	1761                	addi	a4,a4,-8

00000bb6 <.LBB419>:
  *(volatile char*)(STDOUT) = c;
     bb6:	01580023          	sb	s5,0(a6)

00000bba <.LBE419>:
    whisperPutc(*p--);
     bba:	00774903          	lbu	s2,7(a4)

00000bbe <.LBB420>:
  *(volatile char*)(STDOUT) = c;
     bbe:	01280023          	sb	s2,0(a6)

00000bc2 <.LBE420>:
    whisperPutc(*p--);
     bc2:	00674483          	lbu	s1,6(a4)

00000bc6 <.LBB421>:
  *(volatile char*)(STDOUT) = c;
     bc6:	00980023          	sb	s1,0(a6)

00000bca <.LBE421>:
    whisperPutc(*p--);
     bca:	00574983          	lbu	s3,5(a4)

00000bce <.LBB422>:
  *(volatile char*)(STDOUT) = c;
     bce:	01380023          	sb	s3,0(a6)

00000bd2 <.LBE422>:
    whisperPutc(*p--);
     bd2:	00474a03          	lbu	s4,4(a4)

00000bd6 <.LBB423>:
  *(volatile char*)(STDOUT) = c;
     bd6:	01480023          	sb	s4,0(a6)

00000bda <.LBE423>:
    whisperPutc(*p--);
     bda:	00374a83          	lbu	s5,3(a4)

00000bde <.LBB424>:
  *(volatile char*)(STDOUT) = c;
     bde:	01580023          	sb	s5,0(a6)

00000be2 <.LBE424>:
    whisperPutc(*p--);
     be2:	00274903          	lbu	s2,2(a4)

00000be6 <.LBB425>:
  *(volatile char*)(STDOUT) = c;
     be6:	01280023          	sb	s2,0(a6)

00000bea <.LBE425>:
    whisperPutc(*p--);
     bea:	00174483          	lbu	s1,1(a4)

00000bee <.LBB426>:
  *(volatile char*)(STDOUT) = c;
     bee:	00980023          	sb	s1,0(a6)

00000bf2 <.LBE426>:
  for (unsigned i = 0; i < charCount; ++i)
     bf2:	fbe71fe3          	bne	a4,t5,bb0 <.L99>

00000bf6 <.L320>:
          count += whisperPrintInt(va_arg(ap, int), 8);
     bf6:	953e                	add	a0,a0,a5
          break;
     bf8:	f86ff06f          	j	37e <.L71>

00000bfc <.L85>:
          whisperPutc(va_arg(ap, int));
     bfc:	0005c703          	lbu	a4,0(a1)

00000c00 <.LBB429>:
          ++count;
     c00:	0505                	addi	a0,a0,1

00000c02 <.LVL337>:
          whisperPutc(va_arg(ap, int));
     c02:	0591                	addi	a1,a1,4

00000c04 <.LBB432>:
  *(volatile char*)(STDOUT) = c;
     c04:	00e80023          	sb	a4,0(a6)

00000c08 <.LBE432>:
          break;
     c08:	f76ff06f          	j	37e <.L71>

00000c0c <.L337>:
      value = -value;
     c0c:	413007b3          	neg	a5,s3

00000c10 <.LBB381>:
  *(volatile char*)(STDOUT) = c;
     c10:	00580023          	sb	t0,0(a6)
  return c;
     c14:	b989                	j	866 <.L86>

00000c16 <.L336>:
      value = -value;
     c16:	413007b3          	neg	a5,s3

00000c1a <.LBB321>:
  *(volatile char*)(STDOUT) = c;
     c1a:	00580023          	sb	t0,0(a6)
  return c;
     c1e:	b429                	j	628 <.L90>

00000c20 <.L334>:
          while (*fp >= '0' && *fp <= '9')
     c20:	863a                	mv	a2,a4
     c22:	feeff06f          	j	410 <.L78>

00000c26 <.L103>:
  int count = 0;  // Printed character count
     c26:	4501                	li	a0,0

00000c28 <.LVL346>:
}
     c28:	8082                	ret

00000c2a <whisperPrintf>:


int
whisperPrintf(const char* format, ...)
{
     c2a:	7139                	addi	sp,sp,-64
  va_list ap;

  va_start(ap, format);
     c2c:	02410313          	addi	t1,sp,36
{
     c30:	d22e                	sw	a1,36(sp)
  int code = whisperPrintfImpl(format, ap);
     c32:	859a                	mv	a1,t1
{
     c34:	ce06                	sw	ra,28(sp)
     c36:	d432                	sw	a2,40(sp)
     c38:	d636                	sw	a3,44(sp)
     c3a:	d83a                	sw	a4,48(sp)
     c3c:	da3e                	sw	a5,52(sp)
     c3e:	dc42                	sw	a6,56(sp)
     c40:	de46                	sw	a7,60(sp)
  va_start(ap, format);
     c42:	c61a                	sw	t1,12(sp)
  int code = whisperPrintfImpl(format, ap);
     c44:	eecff0ef          	jal	ra,330 <whisperPrintfImpl>

00000c48 <.LVL348>:
  va_end(ap);

  return code;
}
     c48:	40f2                	lw	ra,28(sp)
     c4a:	6121                	addi	sp,sp,64
     c4c:	8082                	ret

00000c4e <printf>:


int
printf(const char* format, ...)
{
     c4e:	7139                	addi	sp,sp,-64
  va_list ap;

  va_start(ap, format);
     c50:	02410313          	addi	t1,sp,36
{
     c54:	d22e                	sw	a1,36(sp)
  int code = whisperPrintfImpl(format, ap);
     c56:	859a                	mv	a1,t1
{
     c58:	ce06                	sw	ra,28(sp)
     c5a:	d432                	sw	a2,40(sp)
     c5c:	d636                	sw	a3,44(sp)
     c5e:	d83a                	sw	a4,48(sp)
     c60:	da3e                	sw	a5,52(sp)
     c62:	dc42                	sw	a6,56(sp)
     c64:	de46                	sw	a7,60(sp)
  va_start(ap, format);
     c66:	c61a                	sw	t1,12(sp)
  int code = whisperPrintfImpl(format, ap);
     c68:	ec8ff0ef          	jal	ra,330 <whisperPrintfImpl>

00000c6c <.LVL350>:
  va_end(ap);

  return code;
}
     c6c:	40f2                	lw	ra,28(sp)
     c6e:	6121                	addi	sp,sp,64
     c70:	8082                	ret

00000c72 <main>:
{
     c72:	7111                	addi	sp,sp,-256
  strcpy (Ptr_Glob->variant.var_1.Str_Comp,
     c74:	6741                	lui	a4,0x10
{
     c76:	df86                	sw	ra,252(sp)
  strcpy (Ptr_Glob->variant.var_1.Str_Comp,
     c78:	61470093          	addi	ra,a4,1556 # 10614 <.LC0>
     c7c:	0000af03          	lw	t5,0(ra)
     c80:	0040ae83          	lw	t4,4(ra)
     c84:	0080ae03          	lw	t3,8(ra)
     c88:	00c0a303          	lw	t1,12(ra)
  Next_Ptr_Glob = (Rec_Pointer) &x;
     c8c:	06010f93          	addi	t6,sp,96
{
     c90:	dda2                	sw	s0,248(sp)
     c92:	dba6                	sw	s1,244(sp)
     c94:	d9ca                	sw	s2,240(sp)
     c96:	d7ce                	sw	s3,236(sp)
     c98:	d5d2                	sw	s4,232(sp)
     c9a:	d3d6                	sw	s5,228(sp)
  strcpy (Str_1_Loc, "DHRYSTONE PROGRAM, 1'ST STRING");
     c9c:	67c1                	lui	a5,0x10
  Next_Ptr_Glob = (Rec_Pointer) &x;
     c9e:	64cd                	lui	s1,0x13
  Ptr_Glob->Ptr_Comp                    = Next_Ptr_Glob;
     ca0:	06010993          	addi	s3,sp,96
  Ptr_Glob = (Rec_Pointer) &y;
     ca4:	644d                	lui	s0,0x13
     ca6:	09010913          	addi	s2,sp,144
  Ptr_Glob->variant.var_1.Enum_Comp     = Ident_3;
     caa:	4a09                	li	s4,2
  Ptr_Glob->variant.var_1.Int_Comp      = 40;
     cac:	02800a93          	li	s5,40
  strcpy (Str_1_Loc, "DHRYSTONE PROGRAM, 1'ST STRING");
     cb0:	63478293          	addi	t0,a5,1588 # 10634 <.LC1>
  Next_Ptr_Glob = (Rec_Pointer) &x;
     cb4:	e9f4aa23          	sw	t6,-364(s1) # 12e94 <Next_Ptr_Glob>
  strcpy (Ptr_Glob->variant.var_1.Str_Comp,
     cb8:	d17a                	sw	t5,160(sp)
     cba:	d376                	sw	t4,164(sp)
     cbc:	0180a503          	lw	a0,24(ra)

00000cc0 <.LVL352>:
     cc0:	01c0d583          	lhu	a1,28(ra)

00000cc4 <.LVL353>:
     cc4:	d572                	sw	t3,168(sp)
{
     cc6:	d1da                	sw	s6,224(sp)
     cc8:	cfde                	sw	s7,220(sp)
     cca:	cde2                	sw	s8,216(sp)
     ccc:	cbe6                	sw	s9,212(sp)
     cce:	c9ea                	sw	s10,208(sp)
     cd0:	c7ee                	sw	s11,204(sp)
  Ptr_Glob->Ptr_Comp                    = Next_Ptr_Glob;
     cd2:	c94e                	sw	s3,144(sp)
  Ptr_Glob = (Rec_Pointer) &y;
     cd4:	e9242c23          	sw	s2,-360(s0) # 12e98 <Ptr_Glob>
  Ptr_Glob->variant.var_1.Enum_Comp     = Ident_3;
     cd8:	cd52                	sw	s4,152(sp)
  Ptr_Glob->variant.var_1.Int_Comp      = 40;
     cda:	cf56                	sw	s5,156(sp)
  strcpy (Ptr_Glob->variant.var_1.Str_Comp,
     cdc:	0100a883          	lw	a7,16(ra)
     ce0:	0140a803          	lw	a6,20(ra)
     ce4:	01e0c603          	lbu	a2,30(ra)
  strcpy (Str_1_Loc, "DHRYSTONE PROGRAM, 1'ST STRING");
     ce8:	0002a683          	lw	a3,0(t0)
     cec:	0042a383          	lw	t2,4(t0)
  strcpy (Ptr_Glob->variant.var_1.Str_Comp,
     cf0:	d71a                	sw	t1,172(sp)
  strcpy (Str_1_Loc, "DHRYSTONE PROGRAM, 1'ST STRING");
     cf2:	01e2c703          	lbu	a4,30(t0)
     cf6:	0082ab03          	lw	s6,8(t0)
     cfa:	00c2ab83          	lw	s7,12(t0)
     cfe:	0102ac03          	lw	s8,16(t0)
     d02:	0142ac83          	lw	s9,20(t0)
     d06:	0182ad03          	lw	s10,24(t0)
     d0a:	01c2dd83          	lhu	s11,28(t0)
  Arr_2_Glob [8][7] = 10;
     d0e:	60c1                	lui	ra,0x10
  printf (" %c", '\n');
     d10:	64c1                	lui	s1,0x10
  Arr_2_Glob [8][7] = 10;
     d12:	75c08993          	addi	s3,ra,1884 # 1075c <Arr_2_Glob>
     d16:	47a9                	li	a5,10
  strcpy (Ptr_Glob->variant.var_1.Str_Comp,
     d18:	dd2a                	sw	a0,184(sp)
     d1a:	0ab11e23          	sh	a1,188(sp)
  printf (" %c", '\n');
     d1e:	08448513          	addi	a0,s1,132 # 10084 <.LC2>
     d22:	45a9                	li	a1,10
  strcpy (Ptr_Glob->variant.var_1.Str_Comp,
     d24:	d946                	sw	a7,176(sp)
     d26:	db42                	sw	a6,180(sp)
     d28:	0ac10f23          	sb	a2,190(sp)
  strcpy (Str_1_Loc, "DHRYSTONE PROGRAM, 1'ST STRING");
     d2c:	d036                	sw	a3,32(sp)
     d2e:	d21e                	sw	t2,36(sp)
     d30:	02e10f23          	sb	a4,62(sp)
  Arr_2_Glob [8][7] = 10;
     d34:	64f9ae23          	sw	a5,1628(s3)
  Ptr_Glob->Discr                       = Ident_1;
     d38:	cb02                	sw	zero,148(sp)
  strcpy (Str_1_Loc, "DHRYSTONE PROGRAM, 1'ST STRING");
     d3a:	d45a                	sw	s6,40(sp)
     d3c:	d65e                	sw	s7,44(sp)
     d3e:	d862                	sw	s8,48(sp)
     d40:	da66                	sw	s9,52(sp)
     d42:	dc6a                	sw	s10,56(sp)
     d44:	03b11e23          	sh	s11,60(sp)
  printf (" %c", '\n');
     d48:	3719                	jal	c4e <printf>

00000d4a <.LVL354>:
  printf ("Dhrystone Benchmark, Version 2.1 (Language: C)%c", '\n');
     d4a:	62c1                	lui	t0,0x10
     d4c:	45a9                	li	a1,10
     d4e:	08828513          	addi	a0,t0,136 # 10088 <.LC3>
     d52:	3df5                	jal	c4e <printf>

00000d54 <.LVL355>:
  printf (" %c", '\n');
     d54:	45a9                	li	a1,10
     d56:	08448513          	addi	a0,s1,132
     d5a:	3dd5                	jal	c4e <printf>

00000d5c <.LVL356>:
  if (Reg)
     d5c:	6f4d                	lui	t5,0x13
     d5e:	e84f2e83          	lw	t4,-380(t5) # 12e84 <Reg>
    printf ("Program compiled with 'register' attribute%c", '\n');
     d62:	45a9                	li	a1,10
  if (Reg)
     d64:	480e8e63          	beqz	t4,1200 <.L343>
    printf ("Program compiled with 'register' attribute%c", '\n');
     d68:	68c1                	lui	a7,0x10
     d6a:	0bc88513          	addi	a0,a7,188 # 100bc <.LC4>
     d6e:	35c5                	jal	c4e <printf>

00000d70 <.LVL357>:
    printf (" %c", '\n');
     d70:	45a9                	li	a1,10
     d72:	08448513          	addi	a0,s1,132
     d76:	3de1                	jal	c4e <printf>

00000d78 <.L344>:
  printf ("Execution starts, %d runs through Dhrystone\n", Number_Of_Runs);
     d78:	6841                	lui	a6,0x10
     d7a:	3e800593          	li	a1,1000
     d7e:	11c80513          	addi	a0,a6,284 # 1011c <.LC6>
     d82:	35f1                	jal	c4e <printf>

00000d84 <.LBB461>:
        asm volatile ("csrr %0,mcycle"  : "=r" (mcyclel) );
     d84:	b0002573          	csrr	a0,mcycle
     d88:	65c1                	lui	a1,0x10
     d8a:	65458613          	addi	a2,a1,1620 # 10654 <.LC7>

00000d8e <.LBE461>:
    strcpy (Str_2_Loc, "DHRYSTONE PROGRAM, 2'ND STRING");
     d8e:	01462903          	lw	s2,20(a2)
     d92:	01862a03          	lw	s4,24(a2)
     d96:	01c65a83          	lhu	s5,28(a2)
     d9a:	01e64b03          	lbu	s6,30(a2)
     d9e:	4614                	lw	a3,8(a2)
     da0:	00c62383          	lw	t2,12(a2)
     da4:	01062f83          	lw	t6,16(a2)
     da8:	00062d83          	lw	s11,0(a2)
     dac:	00462d03          	lw	s10,4(a2)

00000db0 <.LBB465>:
        start_time_val = mcyclel;
     db0:	6bcd                	lui	s7,0x13
     db2:	6c41                	lui	s8,0x10
     db4:	6745                	lui	a4,0x11

00000db6 <.LBE465>:
        strcpy (Str_2_Loc, "DHRYSTONE PROGRAM, 3'RD STRING");
     db6:	67c1                	lui	a5,0x10
    strcpy (Str_2_Loc, "DHRYSTONE PROGRAM, 2'ND STRING");
     db8:	c84a                	sw	s2,16(sp)
     dba:	ca52                	sw	s4,20(sp)
     dbc:	01511c23          	sh	s5,24(sp)
     dc0:	01610da3          	sb	s6,27(sp)

00000dc4 <.LBB466>:
        start_time_val = mcyclel;
     dc4:	eaaba023          	sw	a0,-352(s7) # 12ea0 <start_time_val>
     dc8:	694c0a13          	addi	s4,s8,1684 # 10694 <Arr_1_Glob>
        asm volatile ("csrr %0,mcycle"  : "=r" (mcyclel) );
     dcc:	ce2a                	sw	a0,28(sp)

00000dce <.LBE466>:
    strcpy (Str_2_Loc, "DHRYSTONE PROGRAM, 2'ND STRING");
     dce:	c236                	sw	a3,4(sp)
     dd0:	c41e                	sw	t2,8(sp)
     dd2:	c67e                	sw	t6,12(sp)
  for (Run_Index = 1; Run_Index <= Number_Of_Runs; ++Run_Index)
     dd4:	4c85                	li	s9,1
     dd6:	6b4d                	lui	s6,0x13
     dd8:	6acd                	lui	s5,0x13
     dda:	694d                	lui	s2,0x13
     ddc:	75c70493          	addi	s1,a4,1884 # 1175c <Arr_2_Glob+0x1000>
     de0:	6bcd                	lui	s7,0x13
        strcpy (Str_2_Loc, "DHRYSTONE PROGRAM, 3'RD STRING");
     de2:	67478c13          	addi	s8,a5,1652 # 10674 <.LC8>

00000de6 <.L358>:
    strcpy (Str_2_Loc, "DHRYSTONE PROGRAM, 2'ND STRING");
     de6:	4e92                	lw	t4,4(sp)
     de8:	4e22                	lw	t3,8(sp)
     dea:	4332                	lw	t1,12(sp)
     dec:	48c2                	lw	a7,16(sp)
     dee:	4852                	lw	a6,20(sp)
     df0:	01815503          	lhu	a0,24(sp)
     df4:	01b14583          	lbu	a1,27(sp)
     df8:	02214083          	lbu	ra,34(sp)

00000dfc <.LBB473>:
	Ch_1_Glob = 'A';
     dfc:	04100293          	li	t0,65

00000e00 <.LBB474>:
	Ch_2_Glob = 'B';
     e00:	04200f13          	li	t5,66

00000e04 <.LBB478>:
	Ch_1_Glob = 'A';
     e04:	e85b04a3          	sb	t0,-375(s6) # 12e89 <Ch_1_Glob>

00000e08 <.LBB479>:
	Ch_2_Glob = 'B';
     e08:	e9ea8423          	sb	t5,-376(s5) # 12e88 <Ch_2_Glob>

00000e0c <.LBE480>:
    strcpy (Str_2_Loc, "DHRYSTONE PROGRAM, 2'ND STRING");
     e0c:	c0ee                	sw	s11,64(sp)
     e0e:	c2ea                	sw	s10,68(sp)
     e10:	c4f6                	sw	t4,72(sp)
     e12:	c6f2                	sw	t3,76(sp)
     e14:	c89a                	sw	t1,80(sp)
     e16:	cac6                	sw	a7,84(sp)
     e18:	ccc2                	sw	a6,88(sp)
     e1a:	04a11e23          	sh	a0,92(sp)
     e1e:	04b10f23          	sb	a1,94(sp)

00000e22 <.LBB481>:
    while (Int_Loc <= 2)	/* loop body executed once */
     e22:	05900613          	li	a2,89
     e26:	3ac08f63          	beq	ra,a2,11e4 <.L346>

00000e2a <.LBB483>:
  while (*s1 && *s2 && *s1 == *s2) {
     e2a:	02014783          	lbu	a5,32(sp)
     e2e:	04010f93          	addi	t6,sp,64

00000e32 <.LVL366>:
     e32:	1014                	addi	a3,sp,32

00000e34 <.LVL367>:
     e34:	eb81                	bnez	a5,e44 <.L347>
     e36:	ae45                	j	11e6 <.L363>

00000e38 <.L378>:
     e38:	00f39c63          	bne	t2,a5,e50 <.L349>
     e3c:	0006c783          	lbu	a5,0(a3)
     e40:	3a078363          	beqz	a5,11e6 <.L363>

00000e44 <.L347>:
     e44:	000fc383          	lbu	t2,0(t6) # 10000 <.L80>
    s1++;
     e48:	0685                	addi	a3,a3,1
    s2++;
     e4a:	0f85                	addi	t6,t6,1
  while (*s1 && *s2 && *s1 == *s2) {
     e4c:	fe0396e3          	bnez	t2,e38 <.L378>

00000e50 <.L349>:
  return (*(unsigned char *) s1) - (*(unsigned char *) s2);
     e50:	40778733          	sub	a4,a5,t2
     e54:	00172093          	slti	ra,a4,1

00000e58 <.L348>:
    Arr_2_Par_Ref[Int_Loc][Int_Loc - 1] += 1;
     e58:	65c9a283          	lw	t0,1628(s3)

00000e5c <.LBE506>:
    Proc_1 (Ptr_Glob);
     e5c:	e9842503          	lw	a0,-360(s0)

00000e60 <.LBB511>:
    Arr_1_Par_Ref[Int_Loc] = Int_2_Par_Val;
     e60:	4f1d                	li	t5,7
    Arr_1_Par_Ref[Int_Loc + 30] = Int_Loc;
     e62:	4ea1                	li	t4,8
    Arr_2_Par_Ref[Int_Loc][Int_Loc - 1] += 1;
     e64:	00128e13          	addi	t3,t0,1
    Int_Glob = 5;
     e68:	4315                	li	t1,5
    Arr_1_Par_Ref[Int_Loc] = Int_2_Par_Val;
     e6a:	03ea2023          	sw	t5,32(s4)
    Arr_1_Par_Ref[Int_Loc + 1] = Arr_1_Par_Ref[Int_Loc];
     e6e:	03ea2223          	sw	t5,36(s4)
    Arr_1_Par_Ref[Int_Loc + 30] = Int_Loc;
     e72:	09da2c23          	sw	t4,152(s4)

00000e76 <.LBE511>:
    Bool_Glob = ! Func_2 (Str_1_Loc, Str_2_Loc);
     e76:	e8192623          	sw	ra,-372(s2) # 12e8c <Bool_Glob>

00000e7a <.LBB512>:
	Arr_2_Par_Ref[Int_Loc][Int_Index] = Int_Loc;
     e7a:	67d9a023          	sw	t4,1632(s3)

00000e7e <.LVL374>:
     e7e:	67d9a223          	sw	t4,1636(s3)

00000e82 <.LVL375>:
    Arr_2_Par_Ref[Int_Loc][Int_Loc - 1] += 1;
     e82:	65c9ae23          	sw	t3,1628(s3)
    Arr_2_Par_Ref[Int_Loc + 20][Int_Loc] = Arr_1_Par_Ref[Int_Loc];
     e86:	61e4a023          	sw	t5,1536(s1)
    Int_Glob = 5;
     e8a:	e86ba823          	sw	t1,-368(s7) # 12e90 <Int_Glob>

00000e8e <.LBE513>:
    Proc_1 (Ptr_Glob);
     e8e:	a7cff0ef          	jal	ra,10a <Proc_1>

00000e92 <.LVL377>:
    for (Ch_Index = 'A'; Ch_Index <= Ch_2_Glob; ++Ch_Index)
     e92:	e88ac383          	lbu	t2,-376(s5)
     e96:	04000893          	li	a7,64
     e9a:	3478fe63          	bgeu	a7,t2,11f6 <.L379>
     e9e:	04100813          	li	a6,65
     ea2:	e89b4f83          	lbu	t6,-375(s6)
     ea6:	e90ba703          	lw	a4,-368(s7)

00000eaa <.LVL378>:
     eaa:	35038363          	beq	t2,a6,11f0 <.L364>
     eae:	88fe                	mv	a7,t6
     eb0:	4801                	li	a6,0
     eb2:	04200793          	li	a5,66
    Int_2_Loc = 3;
     eb6:	458d                	li	a1,3

00000eb8 <.LBB514>:
    if (Ch_2_Loc != Ch_2_Par_Val)
     eb8:	04300693          	li	a3,67

00000ebc <.L356>:
     ebc:	04d79863          	bne	a5,a3,f0c <.L354>

00000ec0 <.LBE522>:
        strcpy (Str_2_Loc, "DHRYSTONE PROGRAM, 3'RD STRING");
     ec0:	000c2703          	lw	a4,0(s8)
     ec4:	004c2083          	lw	ra,4(s8)
     ec8:	008c2283          	lw	t0,8(s8)
     ecc:	00cc2f03          	lw	t5,12(s8)
     ed0:	010c2e83          	lw	t4,16(s8)
     ed4:	014c2e03          	lw	t3,20(s8)
     ed8:	018c2503          	lw	a0,24(s8)
     edc:	01cc5303          	lhu	t1,28(s8)
     ee0:	01ec4603          	lbu	a2,30(s8)
     ee4:	c0ba                	sw	a4,64(sp)
     ee6:	c286                	sw	ra,68(sp)
     ee8:	c496                	sw	t0,72(sp)
     eea:	c6fa                	sw	t5,76(sp)
     eec:	c8f6                	sw	t4,80(sp)
     eee:	caf2                	sw	t3,84(sp)
     ef0:	ccaa                	sw	a0,88(sp)
     ef2:	04611e23          	sh	t1,92(sp)
     ef6:	04c10f23          	sb	a2,94(sp)

00000efa <.LVL380>:
    for (Ch_Index = 'A'; Ch_Index <= Ch_2_Glob; ++Ch_Index)
     efa:	2e77f863          	bgeu	a5,t2,11ea <.L365>
     efe:	04400793          	li	a5,68
     f02:	85e6                	mv	a1,s9

00000f04 <.LBB523>:
	Ch_1_Glob = Ch_1_Loc;
     f04:	04300893          	li	a7,67

00000f08 <.LBE523>:
        Int_Glob = Run_Index;
     f08:	8766                	mv	a4,s9
    for (Ch_Index = 'A'; Ch_Index <= Ch_2_Glob; ++Ch_Index)
     f0a:	4805                	li	a6,1

00000f0c <.L354>:
     f0c:	0785                	addi	a5,a5,1
     f0e:	0ff7f793          	andi	a5,a5,255

00000f12 <.LVL382>:
     f12:	faf3f5e3          	bgeu	t2,a5,ebc <.L356>
     f16:	87c6                	mv	a5,a7

00000f18 <.LVL383>:
     f18:	2c080d63          	beqz	a6,11f2 <.L353>

00000f1c <.L355>:
     f1c:	e8fb04a3          	sb	a5,-375(s6)
     f20:	e8eba823          	sw	a4,-368(s7)

00000f24 <.L361>:
    Int_2_Loc = Int_2_Loc * Int_1_Loc;
     f24:	00159393          	slli	t2,a1,0x1
     f28:	00b38fb3          	add	t6,t2,a1
    Int_1_Loc = Int_2_Loc / Int_3_Loc;
     f2c:	459d                	li	a1,7
     f2e:	02bfc333          	div	t1,t6,a1
    Int_2_Loc = 7 * (Int_2_Loc - Int_3_Loc) - Int_1_Loc;
     f32:	ff9f8093          	addi	ra,t6,-7
     f36:	00309693          	slli	a3,ra,0x3
     f3a:	401682b3          	sub	t0,a3,ra
     f3e:	40628f33          	sub	t5,t0,t1

00000f42 <.L352>:
	if (Ch_1_Glob == 'A')
     f42:	04100e93          	li	t4,65
     f46:	01d79863          	bne	a5,t4,f56 <.L357>

00000f4a <.LVL385>:
		*Int_Par_Ref = Int_Loc - Int_Glob;
     f4a:	e90bae03          	lw	t3,-368(s7)
		Int_Loc -= 1;
     f4e:	00930513          	addi	a0,t1,9

00000f52 <.LVL386>:
		*Int_Par_Ref = Int_Loc - Int_Glob;
     f52:	41c50333          	sub	t1,a0,t3

00000f56 <.L357>:
  for (Run_Index = 1; Run_Index <= Number_Of_Runs; ++Run_Index)
     f56:	0c85                	addi	s9,s9,1
     f58:	3e900613          	li	a2,1001
     f5c:	e8cc95e3          	bne	s9,a2,de6 <.L358>

00000f60 <.LBB529>:
        asm volatile ("csrr %0,mcycle"  : "=r" (mcyclel) );
     f60:	c41a                	sw	t1,8(sp)
     f62:	c27a                	sw	t5,4(sp)
     f64:	b0002c73          	csrr	s8,mcycle

00000f68 <.LBE529>:
  printf ("Execution ends%c", '\n');
     f68:	64c1                	lui	s1,0x10
     f6a:	45a9                	li	a1,10
     f6c:	14c48513          	addi	a0,s1,332 # 1014c <.LC9>

00000f70 <.LBB532>:
        stop_time_val = mcyclel;
     f70:	6d4d                	lui	s10,0x13
     f72:	e98d2e23          	sw	s8,-356(s10) # 12e9c <stop_time_val>

00000f76 <.LBE532>:
  printf (" %c", '\n');
     f76:	6dc1                	lui	s11,0x10
  printf ("Execution ends%c", '\n');
     f78:	39d9                	jal	c4e <printf>

00000f7a <.LVL391>:
  printf (" %c", '\n');
     f7a:	45a9                	li	a1,10
     f7c:	084d8513          	addi	a0,s11,132 # 10084 <.LC2>
     f80:	31f9                	jal	c4e <printf>

00000f82 <.LVL392>:
  printf ("Final values of the variables used in the benchmark:%c", '\n');
     f82:	68c1                	lui	a7,0x10
     f84:	16088513          	addi	a0,a7,352 # 10160 <.LC10>
     f88:	45a9                	li	a1,10
     f8a:	31d1                	jal	c4e <printf>

00000f8c <.LVL393>:
  printf (" %c", '\n');
     f8c:	45a9                	li	a1,10
     f8e:	084d8513          	addi	a0,s11,132
     f92:	3975                	jal	c4e <printf>

00000f94 <.LVL394>:
  printf ("Int_Glob:            %d\n", Int_Glob);
     f94:	e90ba583          	lw	a1,-368(s7)
     f98:	6bc1                	lui	s7,0x10
     f9a:	198b8513          	addi	a0,s7,408 # 10198 <.LC11>
     f9e:	3945                	jal	c4e <printf>

00000fa0 <.LVL395>:
  printf ("        should be:   %d\n", 5);
     fa0:	64c1                	lui	s1,0x10
     fa2:	4595                	li	a1,5
     fa4:	1b448513          	addi	a0,s1,436 # 101b4 <.LC12>
     fa8:	315d                	jal	c4e <printf>

00000faa <.LVL396>:
  printf ("Bool_Glob:           %d\n", Bool_Glob);
     faa:	e8c92583          	lw	a1,-372(s2)
     fae:	6941                	lui	s2,0x10
     fb0:	1d090513          	addi	a0,s2,464 # 101d0 <.LC13>
     fb4:	3969                	jal	c4e <printf>

00000fb6 <.LVL397>:
  printf ("        should be:   %d\n", 1);
     fb6:	4585                	li	a1,1
     fb8:	1b448513          	addi	a0,s1,436
     fbc:	3949                	jal	c4e <printf>

00000fbe <.LVL398>:
  printf ("Ch_1_Glob:           %c\n", Ch_1_Glob);
     fbe:	e89b4583          	lbu	a1,-375(s6)
     fc2:	6b41                	lui	s6,0x10
     fc4:	1ecb0513          	addi	a0,s6,492 # 101ec <.LC14>
     fc8:	3159                	jal	c4e <printf>

00000fca <.LVL399>:
  printf ("        should be:   %c\n", 'A');
     fca:	6cc1                	lui	s9,0x10

00000fcc <.LVL400>:
     fcc:	04100593          	li	a1,65
     fd0:	208c8513          	addi	a0,s9,520 # 10208 <.LC15>
     fd4:	39ad                	jal	c4e <printf>

00000fd6 <.LVL401>:
  printf ("Ch_2_Glob:           %c\n", Ch_2_Glob);
     fd6:	e88ac583          	lbu	a1,-376(s5)
     fda:	6ac1                	lui	s5,0x10
     fdc:	224a8513          	addi	a0,s5,548 # 10224 <.LC16>
     fe0:	31bd                	jal	c4e <printf>

00000fe2 <.LVL402>:
  printf ("        should be:   %c\n", 'B');
     fe2:	04200593          	li	a1,66
     fe6:	208c8513          	addi	a0,s9,520
     fea:	3195                	jal	c4e <printf>

00000fec <.LVL403>:
  printf ("Arr_1_Glob[8]:       %d\n", Arr_1_Glob[8]);
     fec:	020a2583          	lw	a1,32(s4)
     ff0:	6a41                	lui	s4,0x10
     ff2:	240a0513          	addi	a0,s4,576 # 10240 <.LC17>
     ff6:	39a1                	jal	c4e <printf>

00000ff8 <.LVL404>:
  printf ("        should be:   %d\n", 7);
     ff8:	459d                	li	a1,7
     ffa:	1b448513          	addi	a0,s1,436
     ffe:	3981                	jal	c4e <printf>

00001000 <.LVL405>:
  printf ("Arr_2_Glob[8][7]:    %d\n", Arr_2_Glob[8][7]);
    1000:	65c9a583          	lw	a1,1628(s3)
    1004:	69c1                	lui	s3,0x10
    1006:	25c98513          	addi	a0,s3,604 # 1025c <.LC18>
    100a:	3191                	jal	c4e <printf>

0000100c <.LVL406>:
  printf ("        should be:   Number_Of_Runs + 10%c", '\n');
    100c:	6841                	lui	a6,0x10
    100e:	27880513          	addi	a0,a6,632 # 10278 <.LC19>
    1012:	45a9                	li	a1,10
    1014:	392d                	jal	c4e <printf>

00001016 <.LVL407>:
  printf ("Ptr_Glob->%c", '\n');
    1016:	67c1                	lui	a5,0x10
    1018:	2a478513          	addi	a0,a5,676 # 102a4 <.LC20>
    101c:	45a9                	li	a1,10
    101e:	3905                	jal	c4e <printf>

00001020 <.LVL408>:
  printf ("        should be:   (implementation-dependent)%c", '\n');
    1020:	63c1                	lui	t2,0x10
    1022:	2b438513          	addi	a0,t2,692 # 102b4 <.LC21>
    1026:	45a9                	li	a1,10
    1028:	311d                	jal	c4e <printf>

0000102a <.LVL409>:
  printf ("  Discr:             %d\n", Ptr_Glob->Discr);
    102a:	e9842f83          	lw	t6,-360(s0)
    102e:	6d41                	lui	s10,0x10
    1030:	2e8d0513          	addi	a0,s10,744 # 102e8 <.LC22>
    1034:	004fa583          	lw	a1,4(t6)
  printf ("  Enum_Comp:         %d\n", Ptr_Glob->variant.var_1.Enum_Comp);
    1038:	6bc1                	lui	s7,0x10
  printf ("  Int_Comp:          %d\n", Ptr_Glob->variant.var_1.Int_Comp);
    103a:	6b41                	lui	s6,0x10
  printf ("  Discr:             %d\n", Ptr_Glob->Discr);
    103c:	3909                	jal	c4e <printf>

0000103e <.LVL410>:
  printf ("        should be:   %d\n", 0);
    103e:	4581                	li	a1,0
    1040:	1b448513          	addi	a0,s1,436
    1044:	3129                	jal	c4e <printf>

00001046 <.LVL411>:
  printf ("  Enum_Comp:         %d\n", Ptr_Glob->variant.var_1.Enum_Comp);
    1046:	e9842583          	lw	a1,-360(s0)
    104a:	304b8513          	addi	a0,s7,772 # 10304 <.LC23>
  printf ("  Str_Comp:          %s\n", Ptr_Glob->variant.var_1.Str_Comp);
    104e:	6cc1                	lui	s9,0x10
  printf ("  Enum_Comp:         %d\n", Ptr_Glob->variant.var_1.Enum_Comp);
    1050:	458c                	lw	a1,8(a1)
  printf ("        should be:   DHRYSTONE PROGRAM, SOME STRING%c", '\n');
    1052:	6ac1                	lui	s5,0x10
  printf ("  Discr:             %d\n", Next_Ptr_Glob->Discr);
    1054:	69cd                	lui	s3,0x13
  printf ("  Enum_Comp:         %d\n", Ptr_Glob->variant.var_1.Enum_Comp);
    1056:	3ee5                	jal	c4e <printf>

00001058 <.LVL412>:
  printf ("        should be:   %d\n", 2);
    1058:	4589                	li	a1,2
    105a:	1b448513          	addi	a0,s1,436
    105e:	3ec5                	jal	c4e <printf>

00001060 <.LVL413>:
  printf ("  Int_Comp:          %d\n", Ptr_Glob->variant.var_1.Int_Comp);
    1060:	e9842683          	lw	a3,-360(s0)
    1064:	320b0513          	addi	a0,s6,800 # 10320 <.LC24>
  User_Time = time_in_msecs(get_time());
    1068:	694d                	lui	s2,0x13
  printf ("  Int_Comp:          %d\n", Ptr_Glob->variant.var_1.Int_Comp);
    106a:	46cc                	lw	a1,12(a3)
  End_Time = stop_time_val;
    106c:	6a4d                	lui	s4,0x13
  printf ("  Int_Comp:          %d\n", Ptr_Glob->variant.var_1.Int_Comp);
    106e:	36c5                	jal	c4e <printf>

00001070 <.LVL414>:
  printf ("        should be:   %d\n", 17);
    1070:	45c5                	li	a1,17
    1072:	1b448513          	addi	a0,s1,436
    1076:	3ee1                	jal	c4e <printf>

00001078 <.LVL415>:
  printf ("  Str_Comp:          %s\n", Ptr_Glob->variant.var_1.Str_Comp);
    1078:	e9842403          	lw	s0,-360(s0)
    107c:	33cc8513          	addi	a0,s9,828 # 1033c <.LC25>
    1080:	01040593          	addi	a1,s0,16
    1084:	36e9                	jal	c4e <printf>

00001086 <.LVL416>:
  printf ("        should be:   DHRYSTONE PROGRAM, SOME STRING%c", '\n');
    1086:	45a9                	li	a1,10
    1088:	358a8513          	addi	a0,s5,856 # 10358 <.LC26>
    108c:	36c9                	jal	c4e <printf>

0000108e <.LVL417>:
  printf ("Next_Ptr_Glob->%c", '\n');
    108e:	62c1                	lui	t0,0x10
    1090:	39028513          	addi	a0,t0,912 # 10390 <.LC27>
    1094:	45a9                	li	a1,10
    1096:	3e65                	jal	c4e <printf>

00001098 <.LVL418>:
  printf ("        should be:   (implementation-dependent), same as above%c", '\n');
    1098:	6f41                	lui	t5,0x10
    109a:	3a4f0513          	addi	a0,t5,932 # 103a4 <.LC28>
    109e:	45a9                	li	a1,10
    10a0:	367d                	jal	c4e <printf>

000010a2 <.LVL419>:
  printf ("  Discr:             %d\n", Next_Ptr_Glob->Discr);
    10a2:	e949ae83          	lw	t4,-364(s3) # 12e94 <Next_Ptr_Glob>
    10a6:	2e8d0513          	addi	a0,s10,744
    10aa:	004ea583          	lw	a1,4(t4)
    10ae:	3645                	jal	c4e <printf>

000010b0 <.LVL420>:
  printf ("        should be:   %d\n", 0);
    10b0:	4581                	li	a1,0
    10b2:	1b448513          	addi	a0,s1,436
    10b6:	3e61                	jal	c4e <printf>

000010b8 <.LVL421>:
  printf ("  Enum_Comp:         %d\n", Next_Ptr_Glob->variant.var_1.Enum_Comp);
    10b8:	e949ae03          	lw	t3,-364(s3)
    10bc:	304b8513          	addi	a0,s7,772
    10c0:	008e2583          	lw	a1,8(t3)
    10c4:	3669                	jal	c4e <printf>

000010c6 <.LVL422>:
  printf ("        should be:   %d\n", 1);
    10c6:	4585                	li	a1,1
    10c8:	1b448513          	addi	a0,s1,436
    10cc:	3649                	jal	c4e <printf>

000010ce <.LVL423>:
  printf ("  Int_Comp:          %d\n", Next_Ptr_Glob->variant.var_1.Int_Comp);
    10ce:	e949a303          	lw	t1,-364(s3)
    10d2:	320b0513          	addi	a0,s6,800
  printf("Begin Time = %d\n", Begin_Time);
    10d6:	6b41                	lui	s6,0x10
  printf ("  Int_Comp:          %d\n", Next_Ptr_Glob->variant.var_1.Int_Comp);
    10d8:	00c32583          	lw	a1,12(t1)
    10dc:	3e8d                	jal	c4e <printf>

000010de <.LVL424>:
  printf ("        should be:   %d\n", 18);
    10de:	45c9                	li	a1,18
    10e0:	1b448513          	addi	a0,s1,436
    10e4:	36ad                	jal	c4e <printf>

000010e6 <.LVL425>:
  printf ("  Str_Comp:          %s\n",
    10e6:	e949a603          	lw	a2,-364(s3)
    10ea:	33cc8513          	addi	a0,s9,828
  Begin_Time = start_time_val;
    10ee:	6ccd                	lui	s9,0x13
  printf ("  Str_Comp:          %s\n",
    10f0:	01060593          	addi	a1,a2,16
    10f4:	3ea9                	jal	c4e <printf>

000010f6 <.LVL426>:
  printf ("        should be:   DHRYSTONE PROGRAM, SOME STRING%c", '\n');
    10f6:	45a9                	li	a1,10
    10f8:	358a8513          	addi	a0,s5,856
    10fc:	3e89                	jal	c4e <printf>

000010fe <.LVL427>:
  printf ("Int_1_Loc:           %d\n", Int_1_Loc);
    10fe:	45a2                	lw	a1,8(sp)
    1100:	6541                	lui	a0,0x10
    1102:	3e850513          	addi	a0,a0,1000 # 103e8 <.LC29>
    1106:	36a1                	jal	c4e <printf>

00001108 <.LVL428>:
  printf ("        should be:   %d\n", 5);
    1108:	4595                	li	a1,5
    110a:	1b448513          	addi	a0,s1,436
    110e:	3681                	jal	c4e <printf>

00001110 <.LVL429>:
  printf ("Int_2_Loc:           %d\n", Int_2_Loc);
    1110:	4592                	lw	a1,4(sp)
    1112:	6741                	lui	a4,0x10
    1114:	40470513          	addi	a0,a4,1028 # 10404 <.LC30>
    1118:	3e1d                	jal	c4e <printf>

0000111a <.LVL430>:
  printf ("        should be:   %d\n", 13);
    111a:	45b5                	li	a1,13
    111c:	1b448513          	addi	a0,s1,436
    1120:	363d                	jal	c4e <printf>

00001122 <.LVL431>:
  printf ("Int_3_Loc:           %d\n", Int_3_Loc);
    1122:	68c1                	lui	a7,0x10
    1124:	42088513          	addi	a0,a7,1056 # 10420 <.LC31>
    1128:	459d                	li	a1,7
    112a:	3615                	jal	c4e <printf>

0000112c <.LVL432>:
  printf ("        should be:   %d\n", 7);
    112c:	459d                	li	a1,7
    112e:	1b448513          	addi	a0,s1,436
    1132:	3e31                	jal	c4e <printf>

00001134 <.LVL433>:
  printf ("Enum_Loc:            %d\n", Enum_Loc);
    1134:	6841                	lui	a6,0x10
    1136:	43c80513          	addi	a0,a6,1084 # 1043c <.LC32>
    113a:	4585                	li	a1,1
    113c:	3e09                	jal	c4e <printf>

0000113e <.LVL434>:
  printf ("        should be:   %d\n", 1);
    113e:	4585                	li	a1,1
    1140:	1b448513          	addi	a0,s1,436
    1144:	3629                	jal	c4e <printf>

00001146 <.LVL435>:
  printf ("Str_1_Loc:           %s\n", Str_1_Loc);
    1146:	64c1                	lui	s1,0x10
    1148:	100c                	addi	a1,sp,32
    114a:	45848513          	addi	a0,s1,1112 # 10458 <.LC33>
    114e:	3601                	jal	c4e <printf>

00001150 <.LVL436>:
  printf ("        should be:   DHRYSTONE PROGRAM, 1'ST STRING%c", '\n');
    1150:	67c1                	lui	a5,0x10
    1152:	47478513          	addi	a0,a5,1140 # 10474 <.LC34>
    1156:	45a9                	li	a1,10
    1158:	3cdd                	jal	c4e <printf>

0000115a <.LVL437>:
  printf ("Str_2_Loc:           %s\n", Str_2_Loc);
    115a:	63c1                	lui	t2,0x10
    115c:	4ac38513          	addi	a0,t2,1196 # 104ac <.LC35>
    1160:	008c                	addi	a1,sp,64
    1162:	34f5                	jal	c4e <printf>

00001164 <.LVL438>:
  printf ("        should be:   DHRYSTONE PROGRAM, 2'ND STRING%c", '\n');
    1164:	6fc1                	lui	t6,0x10
    1166:	4c8f8513          	addi	a0,t6,1224 # 104c8 <.LC36>
    116a:	45a9                	li	a1,10
    116c:	34cd                	jal	c4e <printf>

0000116e <.LVL439>:
  printf("Begin Time = %d\n", Begin_Time);
    116e:	4d72                	lw	s10,28(sp)
    1170:	500b0513          	addi	a0,s6,1280 # 10500 <.LC37>
  End_Time = stop_time_val;
    1174:	e78a2e23          	sw	s8,-388(s4) # 12e7c <End_Time>
  printf("Begin Time = %d\n", Begin_Time);
    1178:	85ea                	mv	a1,s10

0000117a <.LBB533>:
        CORE_TICKS elapsed=(CORE_TICKS)(MYTIMEDIFF(stop_time_val, start_time_val));
    117a:	41ac0bb3          	sub	s7,s8,s10

0000117e <.LBE533>:
  Begin_Time = start_time_val;
    117e:	e9aca023          	sw	s10,-384(s9) # 12e80 <Begin_Time>

00001182 <.LBB536>:
  User_Time = time_in_msecs(get_time());
    1182:	e7792c23          	sw	s7,-392(s2) # 12e78 <User_Time>
  printf("Begin Time = %d\n", Begin_Time);
    1186:	34e1                	jal	c4e <printf>

00001188 <.LVL441>:
  printf("End Time   = %d\n", End_Time);
    1188:	e7ca2583          	lw	a1,-388(s4)
    118c:	6c41                	lui	s8,0x10
    118e:	514c0513          	addi	a0,s8,1300 # 10514 <.LC38>
    1192:	3c75                	jal	c4e <printf>

00001194 <.LVL443>:
  printf("User Time   = %d\n", User_Time);
    1194:	e7892583          	lw	a1,-392(s2)
    1198:	6ac1                	lui	s5,0x10
    119a:	528a8513          	addi	a0,s5,1320 # 10528 <.LC39>
    119e:	3c45                	jal	c4e <printf>

000011a0 <.LVL444>:
  if (User_Time < Too_Small_Time)
    11a0:	e7892a03          	lw	s4,-392(s2)
    11a4:	060a1863          	bnez	s4,1214 <.L359>
    printf ("Measured time too small to obtain meaningful results%c", '\n');
    11a8:	68c1                	lui	a7,0x10
    11aa:	45a9                	li	a1,10
    11ac:	53c88513          	addi	a0,a7,1340 # 1053c <.LC40>
    11b0:	3c79                	jal	c4e <printf>

000011b2 <.LVL445>:
    printf ("Please increase number of runs%c", '\n');
    11b2:	6841                	lui	a6,0x10
    11b4:	45a9                	li	a1,10
    11b6:	57480513          	addi	a0,a6,1396 # 10574 <.LC41>
    11ba:	3c51                	jal	c4e <printf>

000011bc <.LVL446>:
    printf (" %c", '\n');
    11bc:	45a9                	li	a1,10
    11be:	084d8513          	addi	a0,s11,132
    11c2:	3471                	jal	c4e <printf>

000011c4 <.L375>:
}
    11c4:	50fe                	lw	ra,252(sp)
    11c6:	546e                	lw	s0,248(sp)
    11c8:	54de                	lw	s1,244(sp)
    11ca:	594e                	lw	s2,240(sp)
    11cc:	59be                	lw	s3,236(sp)
    11ce:	5a2e                	lw	s4,232(sp)
    11d0:	5a9e                	lw	s5,228(sp)
    11d2:	5b0e                	lw	s6,224(sp)
    11d4:	4bfe                	lw	s7,220(sp)
    11d6:	4c6e                	lw	s8,216(sp)
    11d8:	4cde                	lw	s9,212(sp)
    11da:	4d4e                	lw	s10,208(sp)
    11dc:	4dbe                	lw	s11,204(sp)
    11de:	4501                	li	a0,0
    11e0:	6111                	addi	sp,sp,256
    11e2:	8082                	ret

000011e4 <.L346>:
    if (Ch_2_Loc != Ch_2_Par_Val)
    11e4:	a001                	j	11e4 <.L346>

000011e6 <.L363>:
    11e6:	4085                	li	ra,1
    11e8:	b985                	j	e58 <.L348>

000011ea <.L365>:
        Int_Glob = Run_Index;
    11ea:	8766                	mv	a4,s9
    for (Ch_Index = 'A'; Ch_Index <= Ch_2_Glob; ++Ch_Index)
    11ec:	85e6                	mv	a1,s9
    11ee:	b33d                	j	f1c <.L355>

000011f0 <.L364>:
    Int_2_Loc = 3;
    11f0:	458d                	li	a1,3

000011f2 <.L353>:
    for (Ch_Index = 'A'; Ch_Index <= Ch_2_Glob; ++Ch_Index)
    11f2:	87fe                	mv	a5,t6
    11f4:	bb05                	j	f24 <.L361>

000011f6 <.L379>:
	if (Ch_1_Glob == 'A')
    11f6:	e89b4783          	lbu	a5,-375(s6)
    11fa:	4f35                	li	t5,13
    11fc:	4305                	li	t1,1
    11fe:	b391                	j	f42 <.L352>

00001200 <.L343>:
    printf ("Program compiled without 'register' attribute%c", '\n');
    1200:	6e41                	lui	t3,0x10
    1202:	0ece0513          	addi	a0,t3,236 # 100ec <.LC5>
    1206:	34a1                	jal	c4e <printf>

00001208 <.LVL455>:
    printf (" %c", '\n');
    1208:	6341                	lui	t1,0x10
    120a:	45a9                	li	a1,10
    120c:	08430513          	addi	a0,t1,132 # 10084 <.LC2>
    1210:	3c3d                	jal	c4e <printf>

00001212 <.LVL456>:
    1212:	b69d                	j	d78 <.L344>

00001214 <.L359>:
    Dhrystones_Per_Second = Number_Of_Runs * 1000 / User_Time;
    1214:	000f40b7          	lui	ra,0xf4
    1218:	24008d93          	addi	s11,ra,576 # f4240 <STACK+0xdbba0>
    Microseconds = User_Time / Number_Of_Runs;
    121c:	3e800413          	li	s0,1000
    1220:	028a56b3          	divu	a3,s4,s0
    printf ("Microseconds for one run through Dhrystone:%c", ' ');
    1224:	62c1                	lui	t0,0x10
    Dhrystones_Per_Second = Number_Of_Runs * 1000 / User_Time;
    1226:	6ecd                	lui	t4,0x13
    printf ("Microseconds for one run through Dhrystone:%c", ' ');
    1228:	59828513          	addi	a0,t0,1432 # 10598 <.LC42>
    122c:	02000593          	li	a1,32
    Microseconds = User_Time / Number_Of_Runs;
    1230:	69cd                	lui	s3,0x13
    Dhrystones_Per_Second = Number_Of_Runs * 1000 / User_Time;
    1232:	034ddf33          	divu	t5,s11,s4
    Microseconds = User_Time / Number_Of_Runs;
    1236:	e6d9aa23          	sw	a3,-396(s3) # 12e74 <Microseconds>
    Dhrystones_Per_Second = Number_Of_Runs * 1000 / User_Time;
    123a:	e7eea823          	sw	t5,-400(t4) # 12e70 <Dhrystones_Per_Second>
    printf ("Microseconds for one run through Dhrystone:%c", ' ');
    123e:	3c01                	jal	c4e <printf>

00001240 <.LVL458>:
    printf ("%d us / %d runs\n", User_Time,Number_Of_Runs);
    1240:	e7892583          	lw	a1,-392(s2)
    1244:	6e41                	lui	t3,0x10
    1246:	3e800613          	li	a2,1000
    124a:	5c8e0513          	addi	a0,t3,1480 # 105c8 <.LC43>
    124e:	3401                	jal	c4e <printf>

00001250 <.LVL459>:
    printf ("Dhrystones per Second:                      ");
    1250:	6341                	lui	t1,0x10
    1252:	5dc30513          	addi	a0,t1,1500 # 105dc <.LC44>
    1256:	3ae5                	jal	c4e <printf>

00001258 <.LVL460>:
    printf ("%d.%d \n", Number_Of_Runs * 1000 / User_Time, (1000 * 1000 * Number_Of_Runs / User_Time) % 1000);
    1258:	e7892903          	lw	s2,-392(s2)
    125c:	3b9ad637          	lui	a2,0x3b9ad
    1260:	a0060513          	addi	a0,a2,-1536 # 3b9aca00 <STACK+0x3b994360>
    1264:	032555b3          	divu	a1,a0,s2
    1268:	6741                	lui	a4,0x10
    126a:	60c70513          	addi	a0,a4,1548 # 1060c <.LC45>
    126e:	0285f633          	remu	a2,a1,s0
    1272:	032dd5b3          	divu	a1,s11,s2
    1276:	3ae1                	jal	c4e <printf>

00001278 <.LVL461>:
  return 0;
    1278:	b7b1                	j	11c4 <.L375>
